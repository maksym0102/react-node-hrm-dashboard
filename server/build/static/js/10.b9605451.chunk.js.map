{"version":3,"sources":["../../src/components/Page.js","../../src/components/dashboard-component/BaseOptionChart.js","../../src/components/dashboard-component/TeamCategoryGroup.js","../../src/hooks/useGeneral.js","../../src/components/dashboard-component/DayStatusButtonGroup.js","../../src/components/dashboard-component/SelftSettingButton.js","../../src/components/dashboard-component/UserScheduleStatus.js","../../src/components/dashboard-component/Heatmap.js","../../src/components/dashboard-component/BlockSchedule.js","../../src/components/dashboard-component/TypeButton.js","../../src/components/dashboard-component/SettingDialog.js","../../src/components/dashboard-component/SchedulePopupContent.js","../../node_modules/@material-ui/core/Stack/Stack.js","../../node_modules/@material-ui/icons/ArrowBackIos.js","../../node_modules/@material-ui/icons/ArrowForwardIos.js","../../src/components/dashboard-component/DayScheduleButton.js","../../src/components/dashboard-calendar/CalendarCard.js","../../src/components/dashboard-component/DetailOfficeButtons.js","../../src/components/dashboard-component/DetailTeamButtons.js","../../src/components/dashboard-calendar/RightSideBar.js","../../src/components/dashboard-calendar/CalendarContent.js","../../src/views/DashboardCalendarPage.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","useStyles","makeStyles","theme","createStyles","border","boxShadow","customShadows","z24","color","palette","text","primary","borderRadius","shape","borderRadiusSm","backgroundColor","background","default","fontWeight","typography","fontWeightBold","grey","mode","borderBottomColor","paper","padding","alignItems","display","marginTop","marginRight","lineHeight","textTransform","BaseOptionChart","useTheme","LABEL_TOTAL","show","label","secondary","subtitle2","LABEL_VALUE","offsetY","h3","colors","main","warning","info","error","success","chart","toolbar","zoom","enabled","foreColor","disabled","fontFamily","states","hover","filter","type","value","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","width","curve","lineCap","grid","strokeDashArray","borderColor","divider","xaxis","axisBorder","axisTicks","markers","size","strokeColors","tooltip","x","legend","fontSize","position","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","pie","donut","total","radialBar","track","strokeWidth","radar","polygons","connectorColors","StyledToggleButtonGroup","withStyles","grouped","spacing","marginBottom","ToggleButtonGroup","TeamCategoryGroup","daygroups","teamInitProps","teamStatusProps","sx","categories","setCategories","React","useState","useEffect","onChange","event","newCategories","aria-label","textAlign","mb","map","item","id","borderLeft","variant","useUserManage","dispatch","useDispatch","sendingInviteEmail","emails","updateSchedule","updatedSchedule","DayStatusButtonGroup","officeGroups","statusProps","officeInitProps","isMulti","setType","types","setTypes","newTypes","style","height","zIndex","mr","heigth","role","icon","paddingTop","ml","exclusive","newType","PopoverStyle","Popover","ScheduleDivider","styled","top","left","transform","SelfSettingButton","schedule","halfday","work","detailInfo","statusTitle","weekTitle","notStatus","isActive","currentUser","iconProps","anchorEl","setAnchorEl","isHalf","setHalf","mInit","setMInit","aInit","setAInit","user","useAuth","undefined","morning","sche","index","afternoon","handleClose","open","Boolean","aria-describedby","onClick","currentTarget","py","px","breakpoints","down","justifyContent","alt","firstname","src","photoURL","minWidth","up","onClose","anchorOrigin","vertical","transformOrigin","Schedule","icon1","icon2","detail1","detail2","status","root","heading","pxToRem","flexBasis","flexShrink","secondaryHeading","UserScheduleStatus","notStatusUsers","scheduleUsers","classes","expanded","setExpanded","handleChange","panel","isExpanded","className","schTitle","margin","expandIcon","aria-controls","occupancy","isCalendar","emoji","users","length","capacity","max","name","isTeam","button","component","RouterLink","to","PATH_DASHBOARD","general","calendar","marginLeft","Heatmap","chatData","setChatData","isMobile","setIsMobile","upSm","useMediaQuery","chartOptions","merge","sparkline","hollow","common","white","series","options","Block","Box","Typography","gutterBottom","Paper","overflowY","p","minHeight","flexWrap","TypeButton","itemAlign","LeftInit","RightInit","not","a","b","indexOf","intersection","AlertDialog","setOpen","checked","setChecked","setLeft","right","setRight","leftChecked","rightChecked","customList","items","List","dense","labelId","ListItem","currentIndex","newChecked","push","splice","selected","ListItemIcon","ListItemText","cursor","Dialog","aria-labelledby","DialogContent","letterSpacing","Button","concat","DialogActions","autoFocus","ListWrapperStyle","SchedulePopupContent","organizations","useSelector","state","adminSetting","selectedMorning","setSelectedMorning","selectedAfternoon","setSelectedAfternoon","setIsHalf","isHalfOrg","setIsHalfOrg","morningDetail","setMorningDetail","afternoonDetail","setAfternoonDetail","getOrganizations","result","features","isHalfDays","Card","CardContent","handleListItemClickMorning","handleListItemClickAfternoon","ToggleButton","joinChildren","separator","childrenArray","toArray","reduce","output","child","key","resolveBreakpointValues","values","base","keys","Object","previous","acc","breakpoint","StackRoot","experimentalStyled","styleProps","styles","_extends","handleBreakpoints","direction","propValue","flexDirection","transformer","createUnarySpacing","directionValues","spacingValues","styleFromPropValue","row","column","getValue","deepmerge","Stack","inProps","themeProps","useThemeProps","props","extendSxProp","_objectWithoutPropertiesLoose","_jsx","as","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","DayScheduleButton","year","month","day","officeFilterId","officeInfo","isSelected","Selection","setOccupancy","office","transition","Weeks","Months","MonthDays","init","date","Date","getFirstDay","getFullYear","getMonth","y","m","getMonthNamebyNumber","GridContainer","GridItem","flex","CalendarCard","daystatus","allStatuses","isWorkingArr","viewDetailByClick","setMonth","setYear","setCalendar","count","setCount","isDisableNext","setIsDisableNext","isDisableBack","setIsDisableBack","min","setMin","setMax","mRange","monthRange","isOdd","monthData","calendarInfo","days","allStatus","schedules","monthCalendar","weekdays","weeks","dIndex","dayObj","i","newData","stat","dData","rObj","userId","data","schArr","userArr","isWork","schObj","parseInt","today","getDate","thisMonth","isAvailable","getCalendar","monthday","firstDay","getDay","startPos","endPos","res","j","k","pop","getDaybyWeek","handleSelected","agenda","wIndex","IconButton","newCount","week","DetailOfficeButtons","DetailTeamButtons","RootStyle","RightSideBar","todayTitle","cToday","isOpenSidebar","isDetail","onCloseSidebar","pathname","useLocation","setIcon","setIsWork","detail","setDetail","setWeekTitle","notStatusYet","setNotStatusYet","sTitle","setTitle","setIsActive","months","mIndex","renderContent","Scrollbar","mt","Drawer","anchor","PaperProps","CalendarContent","useGeneral","officeList","teamList","calendarList","allUsers","userList","useParams","includes","currentCalendar","find","Number","newCalendar","setNewCalendar","teams","setTeams","teamIds","setTeamIds","offices","setOffices","officeIds","setOfficeIds","initialStatus","calendarProps","setCalendarProps","setTodayTitle","userInfo","setUserInfo","setCToday","setSchedule","setAllStatuses","allMembers","setAllMembers","isWorking","setIsWorking","setScheduleUsers","setNotStatusUsers","cUser","setCUser","getCalendarList","getOfficeList","getTeamList","getUserList","getAllStatusById","getUsersByCompany","sch","OfficeStatus","officeId","TeamStatus","team","teamId","roles","uOfficeId","uTeamId","curr","dayOfweek","WeekListTitles","tmpMonth","tmpYear","tmpTodaytitle","tMonth","yearData","mDay","setDate","dayListIndex","statuses","workDays","wDays","sort","basicList","rowObj","basic","custom","cMonth","resData","isSet","sUser","sIndex","updatedUsers","member","userObj","tmpSchArr","getScheduleUsersInfo","handleTeamSelected","teamStatus","Container","maxWidth","Avatar","noWrap","jobtitle","pl","selectedIds","emoji1","emoji2","resIcon","dayStatus","CalendarSchedule","settingDay","then","CalendarPage"],"mappings":"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","file":"static/js/10.b9605451.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { forwardRef } from 'react';\r\n// material\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\r\n  <Box ref={ref} {...other}>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n    {children}\r\n  </Box>\r\n));\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import { useTheme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    '@global': {\r\n      // Tooltip\r\n      '.apexcharts-tooltip,.apexcharts-xaxistooltip': {\r\n        border: '0 !important',\r\n        boxShadow: `${theme.customShadows.z24} !important`,\r\n        color: `${theme.palette.text.primary} !important`,\r\n        borderRadius: `${theme.shape.borderRadiusSm}px !important`,\r\n        backgroundColor: `${theme.palette.background.default} !important`\r\n      },\r\n      '.apexcharts-tooltip-title': {\r\n        border: '0 !important',\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        backgroundColor: `${theme.palette.grey[500_16]} !important`,\r\n        color:\r\n          theme.palette.text[\r\n            theme.palette.mode === 'light' ? 'secondary' : 'primary'\r\n          ]\r\n      },\r\n      '.apexcharts-xaxistooltip-bottom': {\r\n        '&:before': {\r\n          borderBottomColor: 'transparent !important'\r\n        },\r\n        '&:after': {\r\n          borderBottomColor: `${theme.palette.background.paper} !important`\r\n        }\r\n      },\r\n\r\n      // Legend\r\n      '.apexcharts-legend': {\r\n        padding: '0 !important'\r\n      },\r\n      '.apexcharts-legend-series': {\r\n        alignItems: 'center',\r\n        display: 'flex !important'\r\n      },\r\n      '.apexcharts-legend-marker': {\r\n        marginTop: '2px !important',\r\n        marginRight: '8px !important'\r\n      },\r\n      '.apexcharts-legend-text': {\r\n        lineHeight: '18px',\r\n        textTransform: 'capitalize'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport default function BaseOptionChart() {\r\n  useStyles();\r\n  const theme = useTheme();\r\n\r\n  const LABEL_TOTAL = {\r\n    show: true,\r\n    label: 'Total',\r\n    color: theme.palette.text.secondary,\r\n    ...theme.typography.subtitle2\r\n  };\r\n\r\n  const LABEL_VALUE = {\r\n    offsetY: 8,\r\n    color: theme.palette.text.primary,\r\n    ...theme.typography.h3\r\n  };\r\n\r\n  return {\r\n    // Colors\r\n    colors: [\r\n      theme.palette.primary.main,\r\n      theme.palette.warning.main,\r\n      theme.palette.info.main,\r\n      theme.palette.error.main,\r\n      theme.palette.success.main\r\n    ],\r\n\r\n    // Chart\r\n    chart: {\r\n      toolbar: { show: false },\r\n      zoom: { enabled: false },\r\n      // animations: { enabled: false },\r\n      foreColor: theme.palette.text.disabled,\r\n      fontFamily: theme.typography.fontFamily\r\n    },\r\n\r\n    // States\r\n    states: {\r\n      hover: {\r\n        filter: {\r\n          type: 'lighten',\r\n          value: 0.04\r\n        }\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: 'darken',\r\n          value: 0.88\r\n        }\r\n      }\r\n    },\r\n\r\n    // Fill\r\n    fill: {\r\n      opacity: 1,\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.4,\r\n        opacityTo: 0,\r\n        stops: [0, 100]\r\n      }\r\n    },\r\n\r\n    // Datalabels\r\n    dataLabels: { enabled: false },\r\n\r\n    // Stroke\r\n    stroke: {\r\n      width: 3,\r\n      curve: 'smooth',\r\n      lineCap: 'round'\r\n    },\r\n\r\n    // Grid\r\n    grid: {\r\n      strokeDashArray: 3,\r\n      borderColor: theme.palette.divider\r\n    },\r\n\r\n    // Xaxis\r\n    xaxis: {\r\n      axisBorder: { show: false },\r\n      axisTicks: { show: false }\r\n    },\r\n\r\n    // Markers\r\n    markers: {\r\n      size: 0,\r\n      strokeColors: theme.palette.background.paper\r\n    },\r\n\r\n    // Tooltip\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    },\r\n\r\n    // Legend\r\n    legend: {\r\n      show: true,\r\n      fontSize: 13,\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      markers: { radius: 12 },\r\n      itemMargin: { horizontal: 12 },\r\n      labels: {\r\n        colors: theme.palette.text.primary\r\n      }\r\n    },\r\n\r\n    // plotOptions\r\n    plotOptions: {\r\n      // Pie + Donut\r\n      pie: {\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            value: LABEL_VALUE,\r\n            total: LABEL_TOTAL\r\n          }\r\n        }\r\n      },\r\n      // Radialbar\r\n      radialBar: {\r\n        track: {\r\n          strokeWidth: '100%',\r\n          background: theme.palette.grey[500_16]\r\n        },\r\n        dataLabels: {\r\n          value: LABEL_VALUE,\r\n          total: LABEL_TOTAL\r\n        }\r\n      },\r\n      // Radar\r\n      radar: {\r\n        polygons: {\r\n          strokeWidth: 1,\r\n          fill: { colors: ['transparent'] },\r\n          strokeColors: theme.palette.divider,\r\n          connectorColors: theme.palette.divider\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { withStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Typography, ToggleButtonGroup, ToggleButton } from '@material-ui/core';\r\n\r\nTeamCategoryGroup.propTypes = {\r\n  daygroups: PropTypes.array,\r\n  teamInitProps: PropTypes.array,\r\n  teamStatusProps: PropTypes.func,\r\n  sx: PropTypes.object\r\n};\r\n\r\nconst StyledToggleButtonGroup = withStyles((theme) => ({\r\n  grouped: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))(ToggleButtonGroup);\r\n\r\nexport default function TeamCategoryGroup({\r\n  daygroups,\r\n  teamInitProps,\r\n  teamStatusProps,\r\n  sx\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const [categories, setCategories] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    setCategories(teamInitProps);\r\n  }, [teamInitProps]);\r\n\r\n  const handleCategories = (event, newCategories) => {\r\n    teamStatusProps(newCategories);\r\n    setCategories(newCategories);\r\n  };\r\n\r\n  return (\r\n    <StyledToggleButtonGroup\r\n      value={categories}\r\n      onChange={handleCategories}\r\n      aria-label=\"team category\"\r\n      sx={{ display: 'block', textAlign: 'center', mb: 3, ...sx }}\r\n    >\r\n      {daygroups.map((item) => (\r\n        <ToggleButton\r\n          key={item.id}\r\n          value={item.id}\r\n          sx={{\r\n            borderColor: item.color,\r\n            borderRadius: `${theme.spacing(3)} !important`,\r\n            color: item.color,\r\n            borderLeft: `1px solid ${item.color} !important`,\r\n            '&.Mui-selected': {\r\n              color: 'white',\r\n              backgroundColor: item.color\r\n            },\r\n            '&.Mui-selected:hover': {\r\n              backgroundColor: item.color\r\n            },\r\n            ...sx\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>\r\n            {item.label}\r\n          </Typography>\r\n        </ToggleButton>\r\n      ))}\r\n    </StyledToggleButtonGroup>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\n// redux\r\nimport { updateSchedule, sendingInviteEmail } from '../redux/slices/general';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useUserManage() {\r\n  // JWT Auth\r\n  const dispatch = useDispatch();\r\n\r\n  return {\r\n    // -------------- Send invite email ---------------------\r\n    sendingInviteEmail: ({ emails }) =>\r\n      dispatch(sendingInviteEmail({ emails })),\r\n    // -------------- Update list ---------------------\r\n    updateSchedule: ({ updatedSchedule }) =>\r\n      dispatch(updateSchedule({ updatedSchedule }))\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from '@material-ui/core';\r\n\r\nDayStatusButtonGroup.propTypes = {\r\n  officeGroups: PropTypes.array.isRequired,\r\n  statusProps: PropTypes.func,\r\n  officeInitProps: PropTypes.array,\r\n  isMulti: PropTypes.bool,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function DayStatusButtonGroup({\r\n  officeGroups,\r\n  statusProps,\r\n  officeInitProps,\r\n  isMulti,\r\n  sx\r\n}) {\r\n  const [type, setType] = React.useState(0);\r\n  const [types, setTypes] = React.useState([]);\r\n\r\n  const handleType = (event, newType) => {\r\n    if (newType !== null) {\r\n      setType(newType);\r\n      statusProps([newType]);\r\n    }\r\n  };\r\n\r\n  const handleTypes = (event, newTypes) => {\r\n    statusProps(newTypes);\r\n    setTypes(newTypes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMulti) {\r\n      setTypes(officeInitProps);\r\n    } else {\r\n      setType(officeInitProps[0]);\r\n    }\r\n  }, [officeInitProps, isMulti]);\r\n  return (\r\n    <>\r\n      {isMulti ? (\r\n        <ToggleButtonGroup\r\n          value={types}\r\n          onChange={handleTypes}\r\n          aria-label=\"day type\"\r\n          sx={{\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            mb: 3,\r\n            ...sx\r\n          }}\r\n        >\r\n          {officeGroups.map((item) => (\r\n            <ToggleButton\r\n              key={item.id}\r\n              value={item.id}\r\n              style={{ height: '42px', zIndex: 1202 }}\r\n              sx={{\r\n                mr: 1,\r\n                mb: 1,\r\n                heigth: '42px !important',\r\n                borderRadius: '20px !important',\r\n                borderLeft: '1px solid #D5D9DF !important',\r\n                '&.css-am98t8-MuiButtonBase-root-MuiToggleButton-root': {\r\n                  zIndex: '1202 !important'\r\n                },\r\n                '&.Mui-selected': {\r\n                  border: '1px solid #00AB55',\r\n                  borderLeft: '1px solid #00AB55 !important',\r\n                  color: '#00AB55',\r\n                  backgroundColor: 'white'\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <span\r\n                  role=\"img\"\r\n                  aria-label=\"Panda\"\r\n                  style={{ fontSize: '23px' }}\r\n                >\r\n                  {item.icon}\r\n                </span>\r\n                <Typography variant=\"body2\" sx={{ paddingTop: 1, ml: 1 }}>\r\n                  {item.label}\r\n                </Typography>\r\n              </Box>\r\n            </ToggleButton>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n      ) : (\r\n        <ToggleButtonGroup\r\n          value={type}\r\n          exclusive\r\n          onChange={handleType}\r\n          aria-label=\"day type\"\r\n          sx={{ display: 'block', textAlign: 'center', mb: 3 }}\r\n        >\r\n          {officeGroups.map((item) => (\r\n            <ToggleButton\r\n              key={item.id}\r\n              value={item.id}\r\n              style={{ height: '42px' }}\r\n              sx={{\r\n                mr: 1,\r\n                mb: 1,\r\n                heigth: '42px !important',\r\n                borderRadius: '20px !important',\r\n                borderLeft: '1px solid #D5D9DF !important',\r\n                '&.Mui-selected': {\r\n                  border: '1px solid #00AB55',\r\n                  borderLeft: '1px solid #00AB55 !important',\r\n                  color: '#00AB55',\r\n                  backgroundColor: 'white'\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <span\r\n                  role=\"img\"\r\n                  aria-label=\"Panda\"\r\n                  style={{ fontSize: '23px' }}\r\n                >\r\n                  {item.icon}\r\n                </span>\r\n                <Typography variant=\"body2\" sx={{ paddingTop: 1, ml: 1 }}>\r\n                  {item.label}\r\n                </Typography>\r\n              </Box>\r\n            </ToggleButton>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  withStyles,\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\n\r\nimport { Button, Popover, Typography, Box } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport useAuth from '../../hooks/useAuth';\r\nimport PopupContent from './SchedulePopupContent';\r\n\r\nconst PopoverStyle = withStyles(() => ({\r\n  paper: {\r\n    borderRadius: 24\r\n  }\r\n}))(Popover);\r\n\r\nconst ScheduleDivider = styled('div')(() => ({\r\n  position: 'absolute',\r\n  zIndex: 10,\r\n  top: 5,\r\n  left: '50%',\r\n  width: '2px',\r\n  height: '40px',\r\n  borderRadius: '8px',\r\n  backgroundColor: '#e7ecf5',\r\n  transform: 'rotate(15deg)'\r\n}));\r\n\r\nSelfSettingButton.propTypes = {\r\n  schedule: PropTypes.array,\r\n  icon: PropTypes.string,\r\n  halfday: PropTypes.bool,\r\n  work: PropTypes.bool,\r\n  detailInfo: PropTypes.object,\r\n  statusTitle: PropTypes.string,\r\n  weekTitle: PropTypes.string,\r\n  notStatus: PropTypes.bool,\r\n  isActive: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  currentUser: PropTypes.object,\r\n  iconProps: PropTypes.func\r\n};\r\n\r\nexport default function SelfSettingButton({\r\n  schedule,\r\n  icon,\r\n  halfday,\r\n  work,\r\n  detailInfo,\r\n  statusTitle,\r\n  weekTitle,\r\n  notStatus,\r\n  isActive,\r\n  disabled,\r\n  currentUser,\r\n  iconProps\r\n}) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [isHalf, setHalf] = useState(false);\r\n  const [mInit, setMInit] = useState(0);\r\n  const [aInit, setAInit] = useState(0);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (detailInfo.morning !== undefined) {\r\n      schedule.map((sche, index) => {\r\n        if (\r\n          sche.id === detailInfo.morning.id &&\r\n          sche.type === detailInfo.morning.type\r\n        ) {\r\n          setMInit(index);\r\n        }\r\n        if (\r\n          sche.id === detailInfo.afternoon.id &&\r\n          sche.type === detailInfo.afternoon.type\r\n        ) {\r\n          setAInit(index);\r\n        }\r\n      });\r\n    }\r\n  }, [detailInfo, schedule]);\r\n\r\n  const handleClick = (event) => {\r\n    if (isActive) {\r\n      setAnchorEl(event.currentTarget);\r\n    } else {\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const changeIcon = (icon1, icon2, detail1, detail2, status) => {\r\n    handleClose();\r\n    setHalf(status);\r\n    iconProps(icon1, icon2, detail1, detail2, status);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        disabled={disabled}\r\n        aria-describedby={id}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n        sx={{\r\n          marginTop: '20px',\r\n          width: '100%',\r\n          py: theme.spacing(1.5),\r\n          px: theme.spacing(3),\r\n          borderRadius: theme.spacing(3),\r\n          [theme.breakpoints.down('md')]: {\r\n            py: 1,\r\n            px: 1\r\n          }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            width: '100%'\r\n          }}\r\n        >\r\n          <Box sx={{ display: 'flex' }}>\r\n            <Avatar\r\n              alt={disabled ? currentUser.firstname : user.firstname}\r\n              src={disabled ? currentUser.photoURL : user.photoURL}\r\n              sx={{\r\n                width: theme.spacing(6),\r\n                height: theme.spacing(6),\r\n                marginRight: theme.spacing(3),\r\n                [theme.breakpoints.down('md')]: {\r\n                  marginRight: theme.spacing(1)\r\n                }\r\n              }}\r\n            />\r\n            {notStatus ? (\r\n              <Box sx={{ textAlign: 'left' }}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{ py: 1.7, [theme.breakpoints.down('sm')]: { py: 0.5 } }}\r\n                >\r\n                  What's your status for this day?\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Box sx={{ textAlign: 'left' }}>\r\n                <Typography variant=\"body2\">You are working from</Typography>\r\n                <Typography variant=\"subtitle1\">{statusTitle}</Typography>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              border: '1px solid #E7ECF5',\r\n              borderRadius: '50%',\r\n              padding: theme.spacing(1.2, 0),\r\n              width: 50,\r\n              height: 50,\r\n              position: 'relative',\r\n              ...(!work && { backgroundColor: '#FEB6AC', color: 'black' }),\r\n              [theme.breakpoints.down('md')]: {\r\n                minWidth: '0px',\r\n                width: '50px'\r\n              }\r\n            }}\r\n          >\r\n            <Box\r\n              role=\"img\"\r\n              aria-label=\"Panda\"\r\n              sx={{\r\n                fontSize: '15px',\r\n                [theme.breakpoints.up('md')]: {\r\n                  fontSize: '15px',\r\n                  ...(isHalf && { fontSize: '15px' })\r\n                }\r\n              }}\r\n            >\r\n              {icon}\r\n            </Box>\r\n            {halfday && <ScheduleDivider />}\r\n          </Box>\r\n        </Box>\r\n      </Button>\r\n      <PopoverStyle\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 90,\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center'\r\n        }}\r\n        sx={{ backgroundColor: '#00000040' }}\r\n      >\r\n        <PopupContent\r\n          Schedule={schedule}\r\n          iconProps={changeIcon}\r\n          halfday={halfday}\r\n          detailInfo={detailInfo}\r\n          weekTitle={weekTitle}\r\n          mInit={mInit}\r\n          aInit={aInit}\r\n        />\r\n      </PopoverStyle>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport React, { useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Typography,\r\n  Box,\r\n  Avatar,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  AvatarGroup\r\n} from '@material-ui/core';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\nimport Heatmap from './Heatmap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    padding: theme.spacing(1.5, 0, 1, 2),\r\n    minWidth: '200px'\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    padding: theme.spacing(1.5, 0, 1, 2)\r\n  }\r\n}));\r\n\r\nUserScheduleStatus.propTypes = {\r\n  notStatusUsers: PropTypes.array,\r\n  scheduleUsers: PropTypes.array\r\n};\r\n\r\nexport default function UserScheduleStatus({ notStatusUsers, scheduleUsers }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {scheduleUsers.map((status, index) => (\r\n        <Accordion\r\n          key={index}\r\n          expanded={expanded === status.schTitle}\r\n          onChange={handleChange(status.schTitle)}\r\n          sx={{\r\n            margin: theme.spacing(1, 0, 0),\r\n            border: '1px solid #E7ECF5',\r\n            borderRadius: '12px !important',\r\n            mb: 5,\r\n            '&:before': { display: 'none' }\r\n          }}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between'\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <Box\r\n                  sx={{\r\n                    position: 'relative',\r\n                    width: 60,\r\n                    height: 60\r\n                  }}\r\n                >\r\n                  {status.type === 'office' ? (\r\n                    <Heatmap occupancy={status.occupancy} isCalendar={false} />\r\n                  ) : (\r\n                    <Heatmap occupancy={0} />\r\n                  )}\r\n                  <Box\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    sx={{\r\n                      fontSize: '25px',\r\n                      position: 'absolute',\r\n                      top: '50%',\r\n                      left: '50%',\r\n                      transform: 'translate(-50%, -50%)'\r\n                    }}\r\n                  >\r\n                    {status.emoji}\r\n                  </Box>\r\n                </Box>\r\n                <Typography variant=\"subtitle1\" sx={{ py: 2, px: 1 }}>\r\n                  {status.schTitle}{' '}\r\n                  {status.type === 'office' ? (\r\n                    <Typography variant=\"caption\">\r\n                      ({status.users.length}/{status.capacity})\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography variant=\"caption\">\r\n                      ({status.users.length})\r\n                    </Typography>\r\n                  )}\r\n                </Typography>\r\n              </Box>\r\n\r\n              {expanded !== status.schTitle && (\r\n                <AvatarGroup max={3}>\r\n                  {status.users.map((item, index) => (\r\n                    <Avatar\r\n                      key={index}\r\n                      alt={item.name}\r\n                      src={item.photoURL}\r\n                      sx={{\r\n                        width: theme.spacing(5),\r\n                        height: theme.spacing(5),\r\n                        ...(item.isTeam && {\r\n                          border: '2px solid #003cff !important'\r\n                        })\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </AvatarGroup>\r\n              )}\r\n            </Box>\r\n          </AccordionSummary>\r\n          {/* <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n            sx={{\r\n              '& .css-o4b71y-MuiAccordionSummary-content.Mui-expanded': {\r\n                margin: theme.spacing(1, 0, 0)\r\n              }\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'block'\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <Box\r\n                  sx={{\r\n                    position: 'relative',\r\n                    width: 60,\r\n                    height: 60\r\n                  }}\r\n                >\r\n                  {status.type === 'office' ? (\r\n                    <Heatmap occupancy={status.occupancy} isCalendar={false} />\r\n                  ) : (\r\n                    <Heatmap occupancy={0} />\r\n                  )}\r\n                  <Box\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    sx={{\r\n                      fontSize: '25px',\r\n                      position: 'absolute',\r\n                      top: '50%',\r\n                      left: '50%',\r\n                      transform: 'translate(-50%, -50%)'\r\n                    }}\r\n                  >\r\n                    {status.emoji}\r\n                  </Box>\r\n                </Box>\r\n                <Typography variant=\"subtitle1\" sx={{ py: 2, px: 1 }}>\r\n                  {status.schTitle}{' '}\r\n                  {status.type === 'office' ? (\r\n                    <Typography variant=\"caption\">\r\n                      ({status.users.length}/{status.capacity})\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography variant=\"caption\">\r\n                      ({status.users.length})\r\n                    </Typography>\r\n                  )}\r\n                </Typography>\r\n              </Box>\r\n\r\n              {expanded !== status.schTitle && (\r\n                <AvatarGroup\r\n                  max={3}\r\n                  // sx={{\r\n                  //   justifyContent: 'flex-end',\r\n                  //   marginLeft: '30px',\r\n                  //   marginTop: '5px'\r\n                  // }}\r\n                >\r\n                  {status.users.map((item, index) => (\r\n                    <Avatar\r\n                      key={index}\r\n                      alt={item.name}\r\n                      src={item.photoURL}\r\n                      sx={{ width: theme.spacing(5), height: theme.spacing(5) }}\r\n                    />\r\n                  ))}\r\n                </AvatarGroup>\r\n              )}\r\n            </Box>\r\n          </AccordionSummary> */}\r\n          <AccordionDetails>\r\n            {status.users.map((item, index) => (\r\n              <ListItem\r\n                key={index}\r\n                button\r\n                // onClick={handleProfile}\r\n                component={RouterLink}\r\n                to={`${PATH_DASHBOARD.general.calendar}/${item.id}/detail`}\r\n                sx={{ borderRadius: '10px' }}\r\n              >\r\n                <ListItemIcon sx={{ marginRight: '3px' }}>\r\n                  <Box\r\n                    sx={{\r\n                      width: '50px',\r\n                      height: '50px'\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      alt={item.name}\r\n                      src={item.photoURL}\r\n                      sx={{\r\n                        width: theme.spacing(6),\r\n                        height: theme.spacing(6),\r\n                        ...(item.isTeam && {\r\n                          border: '2px solid #003cff !important'\r\n                        })\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n      {notStatusUsers.length > 0 && (\r\n        <Accordion\r\n          expanded={expanded === 'not-status'}\r\n          onChange={handleChange('not-status')}\r\n          sx={{\r\n            border: '1px solid #E7ECF5',\r\n            borderRadius: '24px !important',\r\n            mb: 5,\r\n            '&:before': { display: 'none' }\r\n          }}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between'\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <Box\r\n                  sx={{\r\n                    borderRadius: '50%',\r\n                    border: '3px solid #E7ECF5',\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    textAlign: 'center'\r\n                  }}\r\n                >\r\n                  <span\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    style={{ fontSize: '25px', marginTop: '10px' }}\r\n                  >\r\n                    🤔\r\n                  </span>\r\n                </Box>\r\n                <Typography variant=\"subtitle1\" sx={{ py: 2, px: 1 }}>\r\n                  No Status yet{' '}\r\n                  <Typography variant=\"caption\">\r\n                    ({notStatusUsers.length})\r\n                  </Typography>\r\n                </Typography>\r\n              </Box>\r\n\r\n              {expanded !== 'not-status' && (\r\n                <AvatarGroup max={3}>\r\n                  {notStatusUsers.map((item, index) => (\r\n                    <Avatar key={index} alt={item.name} src={item.photoURL} />\r\n                  ))}\r\n                </AvatarGroup>\r\n              )}\r\n            </Box>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            {notStatusUsers.map((item, index) => (\r\n              <ListItem\r\n                key={index}\r\n                button\r\n                component={RouterLink}\r\n                to={`${PATH_DASHBOARD.general.calendar}/${item.id}/detail`}\r\n                sx={{ borderRadius: '10px' }}\r\n              >\r\n                <ListItemIcon>\r\n                  <Box\r\n                    sx={{\r\n                      width: '50px',\r\n                      height: '50px'\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      alt={item.name}\r\n                      src={item.photoURL}\r\n                      sx={{\r\n                        width: theme.spacing(6),\r\n                        height: theme.spacing(6),\r\n                        marginLeft: theme.spacing(-1)\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// photoURL: \"user.photoURL\"\r\n// id: 3\r\n// name: \"Zlenko Sofia\"\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n// utils\r\nimport BaseOptionChart from './BaseOptionChart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeatmap.propTypes = {\r\n  occupancy: PropTypes.number,\r\n  isCalendar: PropTypes.bool\r\n};\r\n\r\nexport default function Heatmap({ occupancy, isCalendar }) {\r\n  const theme = useTheme();\r\n\r\n  const [chatData, setChatData] = useState([0]);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  const upSm = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  useEffect(() => {\r\n    if (occupancy !== undefined) {\r\n      setChatData([occupancy]);\r\n    }\r\n  }, [occupancy]);\r\n\r\n  useEffect(() => {\r\n    setIsMobile(upSm);\r\n  }, [upSm]);\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    colors: {\r\n      ...(chatData[0] > 50 && [theme.palette.warning.main]),\r\n      ...(chatData[0] > 75 && [theme.palette.error.main])\r\n    },\r\n    chart: { sparkline: { enabled: true } },\r\n    legend: { show: false },\r\n    plotOptions: {\r\n      radialBar: {\r\n        hollow: { size: '78%' },\r\n        track: { margin: 0 },\r\n        dataLabels: {\r\n          name: { show: false },\r\n          value: {\r\n            offsetY: 6,\r\n            color: theme.palette.common.white,\r\n            fontSize: 1\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isCalendar ? (\r\n        <>\r\n          {isMobile ? (\r\n            <ReactApexChart\r\n              type=\"radialBar\"\r\n              series={chatData}\r\n              options={chartOptions}\r\n              width={50}\r\n              height={50}\r\n            />\r\n          ) : (\r\n            <ReactApexChart\r\n              type=\"radialBar\"\r\n              series={chatData}\r\n              options={chartOptions}\r\n              width={68}\r\n              height={68}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <ReactApexChart\r\n          type=\"radialBar\"\r\n          series={chatData}\r\n          options={chartOptions}\r\n          width={60}\r\n          height={60}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\n// material\r\nimport { Box, Typography, Paper } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBlock.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function Block({ title, children, sx, ...other }) {\r\n  return (\r\n    <Box sx={{ position: 'relative' }} {...other}>\r\n      {title && (\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"subtitle2\"\r\n          sx={{ color: 'text.secondary' }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <Paper\r\n        variant=\"outlined\"\r\n        sx={{\r\n          overflowY: 'auto',\r\n          p: 1,\r\n          minHeight: 60,\r\n          height: 150,\r\n          borderRadius: 1.5,\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          ...sx\r\n        }}\r\n      >\r\n        {children}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Box } from '@material-ui/core';\r\n\r\nTypeButton.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default function TypeButton({ type }) {\r\n  return (\r\n    <>\r\n      {type === 'all' && (\r\n        <Box sx={{ display: 'flex', itemAlign: 'center' }}>\r\n          {' '}\r\n          ALL DAY <CloseIcon />{' '}\r\n        </Box>\r\n      )}\r\n      {type === 'half' && (\r\n        <Box sx={{ display: 'flex', itemAlign: 'center' }}>\r\n          {' '}\r\n          HALF DAY <AddIcon />{' '}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\n//------------------------------------------------------------\r\n\r\nconst LeftInit = [\r\n  {\r\n    value: 10,\r\n    label: 'Working remotely',\r\n    icon: '🏡'\r\n  },\r\n  {\r\n    value: 11,\r\n    label: 'On the go',\r\n    icon: '🚶‍♂️'\r\n  }\r\n];\r\n\r\nconst RightInit = [\r\n  {\r\n    value: 20,\r\n    label: 'At the office',\r\n    icon: '💼'\r\n  },\r\n  {\r\n    value: 21,\r\n    label: 'With family',\r\n    icon: '👨‍👨‍👦‍👦'\r\n  }\r\n];\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function AlertDialog() {\r\n  const theme = useTheme();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState(LeftInit);\r\n  const [right, setRight] = React.useState(RightInit);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = (items) => (\r\n    <Paper\r\n      sx={{\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          minWidth: '550px',\r\n          border: '1px solid #E7ECF5',\r\n          mb: 4\r\n        }\r\n      }}\r\n    >\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map((item) => {\r\n          const labelId = `transfer-list-item-${item.value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={labelId}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle(item)}\r\n              selected={checked.indexOf(item) !== -1}\r\n              sx={{ borderRadius: 2, mb: 1 }}\r\n            >\r\n              <ListItemIcon>\r\n                <Box\r\n                  sx={{\r\n                    borderRadius: '50%',\r\n                    border: '3px solid #E7ECF5',\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    textAlign: 'center'\r\n                  }}\r\n                >\r\n                  <span\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    style={{ fontSize: '25px' }}\r\n                  >\r\n                    {item.icon}\r\n                  </span>\r\n                </Box>\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        component=\"img\"\r\n        src=\"/static/dashboard/home/setting_icon.svg\"\r\n        sx={{ cursor: 'pointer' }}\r\n        onClick={handleClickOpen}\r\n      />\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{ padding: theme.spacing(3, 3, 1, 3), textAlign: 'center' }}\r\n        >\r\n          Offices preferences\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          Set offices according to the order you want to see first.\r\n        </Typography>\r\n        <DialogContent>\r\n          <Box>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              sx={{\r\n                padding: theme.spacing(4, 3, 1, 3),\r\n                textAlign: 'center',\r\n                letterSpacing: '2px'\r\n              }}\r\n            >\r\n              MAIN OFFICES\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              Main offices are where you go regularly\r\n            </Typography>\r\n            <Box> {customList(left)} </Box>\r\n            <Box sx={{ width: '100%', textAlign: 'center' }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleAllRight}\r\n                disabled={left.length === 0}\r\n                aria-label=\"move all right\"\r\n                sx={{ mr: 1, [theme.breakpoints.up('md')]: { mr: 3 } }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  src=\"/static/dashboard/home/angle-double-down.svg\"\r\n                  sx={{ height: '30px' }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleCheckedRight}\r\n                disabled={leftChecked.length === 0}\r\n                aria-label=\"move selected right\"\r\n                sx={{ mr: 1, [theme.breakpoints.up('md')]: { mr: 3 } }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  src=\"/static/dashboard/home/angle-down.svg\"\r\n                  sx={{ height: '30px' }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleCheckedLeft}\r\n                disabled={rightChecked.length === 0}\r\n                aria-label=\"move selected left\"\r\n                sx={{ mr: 1, [theme.breakpoints.up('md')]: { mr: 3 } }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  src=\"/static/dashboard/home/angle-up.svg\"\r\n                  sx={{ height: '30px' }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleAllLeft}\r\n                disabled={right.length === 0}\r\n                aria-label=\"move all left\"\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  src=\"/static/dashboard/home/angle-double-up.svg\"\r\n                  sx={{ height: '30px' }}\r\n                />\r\n              </Button>\r\n            </Box>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              sx={{\r\n                padding: theme.spacing(4, 3, 1, 3),\r\n                textAlign: 'center',\r\n                letterSpacing: '2px'\r\n              }}\r\n            >\r\n              SECONDARY OFFICES\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              Secondary offices will be hidden by default\r\n            </Typography>\r\n            <Box>{customList(right)}</Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Validate\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n// material\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  Box,\r\n  List,\r\n  Typography,\r\n  ListItem,\r\n  Button,\r\n  CardContent,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ToggleButton\r\n} from '@material-ui/core';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getOrganizations } from '../../redux/slices/adminSetting';\r\n\r\n// routes\r\n// components\r\nimport BlockSchedule from './BlockSchedule';\r\nimport TypeButton from './TypeButton';\r\nimport SimpleDialogDemo from './SettingDialog';\r\n\r\nSchedulePopupContent.propTypes = {\r\n  mInit: PropTypes.number,\r\n  aInit: PropTypes.number,\r\n  halfday: PropTypes.bool,\r\n  Schedule: PropTypes.array,\r\n  detailInfo: PropTypes.object,\r\n  weekTitle: PropTypes.string,\r\n  iconProps: PropTypes.func\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ListWrapperStyle = styled('div')(() => ({\r\n  width: '100%'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SchedulePopupContent({\r\n  mInit,\r\n  aInit,\r\n  halfday,\r\n  Schedule,\r\n  detailInfo,\r\n  weekTitle,\r\n  iconProps\r\n}) {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const { organizations } = useSelector((state) => state.adminSetting);\r\n\r\n  const [selectedMorning, setSelectedMorning] = useState(mInit);\r\n  const [selectedAfternoon, setSelectedAfternoon] = useState(aInit);\r\n  const [isHalf, setIsHalf] = useState(!halfday);\r\n  const [isHalfOrg, setIsHalfOrg] = useState(false);\r\n\r\n  const [morningDetail, setMorningDetail] = useState({});\r\n  const [afternoonDetail, setAfternoonDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrganizations());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const { result } = organizations;\r\n    if (result.features.isHalfDays === 0) {\r\n      setIsHalf(true);\r\n      setIsHalfOrg(true);\r\n    }\r\n  }, [organizations]);\r\n\r\n  useEffect(() => {\r\n    setSelectedMorning(mInit);\r\n    setSelectedAfternoon(aInit);\r\n  }, [mInit, aInit]);\r\n\r\n  const handleListItemClickMorning = (event, index, id, type) => {\r\n    const detail = {\r\n      id,\r\n      type\r\n    };\r\n    setMorningDetail(detail);\r\n    setSelectedMorning(index);\r\n  };\r\n\r\n  const handleListItemClickAfternoon = (event, index, id, type) => {\r\n    const detail = {\r\n      id,\r\n      type\r\n    };\r\n    setAfternoonDetail(detail);\r\n    setSelectedAfternoon(index);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    iconProps(\r\n      selectedMorning,\r\n      selectedAfternoon,\r\n      morningDetail.id === undefined ? detailInfo.morning : morningDetail,\r\n      afternoonDetail.id === undefined ? detailInfo.afternoon : afternoonDetail,\r\n      !isHalf\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          borderRadius: theme.spacing(2.4),\r\n          minWidth: 320,\r\n          [theme.breakpoints.up('sm')]: { minWidth: 350 }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            padding: '24px 24px 0',\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" sx={{ margin: 'auto' }}>\r\n            {weekTitle}\r\n          </Typography>\r\n          <SimpleDialogDemo />\r\n        </Box>\r\n        <CardContent>\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                color: 'rgb(135, 143, 177)',\r\n                mb: 1\r\n              }}\r\n            >\r\n              <Box\r\n                component=\"img\"\r\n                src=\"/static/dashboard/home/light_mode_black_24dp.svg\"\r\n                sx={{ mr: 1 }}\r\n              />\r\n              {!isHalf ? (\r\n                <Typography variant=\"body2\">MORNING</Typography>\r\n              ) : (\r\n                <Typography variant=\"body2\">ALL DAY</Typography>\r\n              )}\r\n            </Box>\r\n            <BlockSchedule sx={{ mb: 3, ...(isHalf && { height: 360 }) }}>\r\n              <ListWrapperStyle>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                  {Schedule.map((item, index) => (\r\n                    <ListItem\r\n                      key={index}\r\n                      button\r\n                      selected={selectedMorning === index}\r\n                      onClick={(event) =>\r\n                        handleListItemClickMorning(\r\n                          event,\r\n                          index,\r\n                          item.id,\r\n                          item.type\r\n                        )\r\n                      }\r\n                      sx={{ borderRadius: '10px' }}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Box\r\n                          sx={{\r\n                            borderRadius: '50%',\r\n                            border: '3px solid #E7ECF5',\r\n                            width: '50px',\r\n                            height: '50px',\r\n                            paddingTop: '2px',\r\n                            textAlign: 'center'\r\n                          }}\r\n                        >\r\n                          <span\r\n                            role=\"img\"\r\n                            aria-label=\"Panda\"\r\n                            style={{ fontSize: '25px' }}\r\n                          >\r\n                            {item.emoji}\r\n                          </span>\r\n                        </Box>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item.title} />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </ListWrapperStyle>\r\n            </BlockSchedule>\r\n          </Box>\r\n\r\n          <Box sx={{ ...(isHalf && { display: 'none' }) }}>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                color: 'rgb(135, 143, 177)',\r\n                mb: 1\r\n              }}\r\n            >\r\n              <Box\r\n                component=\"img\"\r\n                src=\"/static/dashboard/home/nightlight_black_24dp.svg\"\r\n                sx={{ mr: 1 }}\r\n              />\r\n              <Typography variant=\"body2\">AFTERNOON</Typography>\r\n            </Box>\r\n            <BlockSchedule sx={{ mb: 3 }}>\r\n              <ListWrapperStyle>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                  {Schedule.map((item, index) => (\r\n                    <ListItem\r\n                      key={index}\r\n                      button\r\n                      selected={selectedAfternoon === index}\r\n                      onClick={(event) =>\r\n                        handleListItemClickAfternoon(\r\n                          event,\r\n                          index,\r\n                          item.id,\r\n                          item.type\r\n                        )\r\n                      }\r\n                      sx={{ borderRadius: '10px' }}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Box\r\n                          sx={{\r\n                            borderRadius: '50%',\r\n                            border: '3px solid #E7ECF5',\r\n                            width: '50px',\r\n                            height: '50px',\r\n                            textAlign: 'center'\r\n                          }}\r\n                        >\r\n                          <span\r\n                            role=\"img\"\r\n                            aria-label=\"Panda\"\r\n                            style={{ fontSize: '25px' }}\r\n                          >\r\n                            {item.emoji}\r\n                          </span>\r\n                        </Box>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item.title} />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </ListWrapperStyle>\r\n            </BlockSchedule>\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <ToggleButton\r\n              disabled={isHalfOrg}\r\n              value=\"check\"\r\n              selected={isHalf}\r\n              onChange={() => {\r\n                setIsHalf(!isHalf);\r\n              }}\r\n              sx={{ padding: '5px 10px', minWidth: '110px' }}\r\n            >\r\n              {isHalf ? <TypeButton type=\"all\" /> : <TypeButton type=\"half\" />}\r\n            </ToggleButton>\r\n            <Button variant=\"outlined\" onClick={handleClick}>\r\n              Set Status\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { deepmerge } from '@material-ui/utils';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nfunction resolveBreakpointValues({\n  values,\n  base\n}) {\n  const keys = Object.keys(base);\n\n  if (keys.length === 0) {\n    return values;\n  }\n\n  let previous;\n  return keys.reduce((acc, breakpoint) => {\n    if (typeof values === 'object') {\n      acc[breakpoint] = values[breakpoint] || values[previous];\n    } else {\n      acc[breakpoint] = values;\n    }\n\n    previous = breakpoint;\n    return acc;\n  }, {});\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  styleProps,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, styleProps.direction, propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (styleProps.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (styleProps.spacing[breakpoint] || styleProps.direction[breakpoint]) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: styleProps.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: styleProps.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : styleProps.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = experimentalStyled('div', {}, {\n  name: 'Stack'\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"]);\n\n  const styleProps = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Stack;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23L8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","/* eslint-disable array-callback-return */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport Heatmap from './Heatmap';\r\n\r\nDayScheduleButton.propTypes = {\r\n  year: PropTypes.number,\r\n  month: PropTypes.number,\r\n  day: PropTypes.number,\r\n  officeFilterId: PropTypes.number,\r\n  officeInfo: PropTypes.array,\r\n  icon: PropTypes.string,\r\n  halfday: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n  isActive: PropTypes.bool,\r\n  Selection: PropTypes.func\r\n};\r\n\r\nconst ScheduleDivider = styled('div')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: '50%',\r\n  top: '10px',\r\n  zIndex: 10,\r\n  width: '2px',\r\n  height: '48px',\r\n  borderRadius: '8px',\r\n  backgroundColor: '#e0e0e0',\r\n  transform: 'rotate(15deg)',\r\n  [theme.breakpoints.down('sm')]: {\r\n    height: '30px'\r\n  }\r\n}));\r\n\r\nexport default function DayScheduleButton({\r\n  year,\r\n  month,\r\n  day,\r\n  officeFilterId,\r\n  officeInfo,\r\n  icon,\r\n  halfday,\r\n  isSelected,\r\n  isActive,\r\n  Selection\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const [occupancy, setOccupancy] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (officeInfo.length > 0) {\r\n      officeInfo.map((office) => {\r\n        if (office.id === officeFilterId) {\r\n          setOccupancy(office.occupancy);\r\n        }\r\n      });\r\n    }\r\n  }, [officeInfo, officeFilterId]);\r\n\r\n  const handleClick = () => {\r\n    Selection(true, year, month, day);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleClick}\r\n      sx={{\r\n        ...(isSelected && { backgroundColor: '#f7f5f5' }),\r\n        transition: 'all .3s',\r\n        borderRadius: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '70px',\r\n          margin: 'auto'\r\n        },\r\n        '&:hover': {\r\n          cursor: 'pointer',\r\n          backgroundColor: '#f7f5f5'\r\n        }\r\n      }}\r\n    >\r\n      <Typography variant=\"caption\">{day}</Typography>\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          margin: '0px 1px',\r\n          borderRadius: '50%',\r\n          ...(!isActive && { backgroundColor: '#f7f5f5' }),\r\n          [theme.breakpoints.down('sm')]: {\r\n            width: 45,\r\n            height: 50\r\n          }\r\n        }}\r\n      >\r\n        <Heatmap occupancy={occupancy} isCalendar />\r\n        <Box\r\n          role=\"img\"\r\n          aria-label=\"Panda\"\r\n          sx={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            fontSize: '12px',\r\n            [theme.breakpoints.up('sm')]: { fontSize: '18px' }\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n        {halfday && <ScheduleDivider />}\r\n      </Box>\r\n      {/* <Box\r\n        sx={{\r\n          position: 'relative',\r\n          borderRadius: '50%',\r\n          overflow: 'hidden',\r\n          width: '60px',\r\n          height: '60px',\r\n          textAlign: 'center',\r\n          margin: 'auto',\r\n          py: 1.2,\r\n          border: '1px solid #e8e8e8',\r\n          [theme.breakpoints.down('sm')]: {\r\n            border: '3px solid #E7ECF5',\r\n            py: 1,\r\n            width: '40px',\r\n            height: '40px'\r\n          }\r\n        }}\r\n      >\r\n        <Box\r\n          role=\"img\"\r\n          aria-label=\"Panda\"\r\n          sx={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            fontSize: '12px',\r\n            [theme.breakpoints.up('sm')]: { fontSize: '18px' }\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n        {halfday && <ScheduleDivider />}\r\n        <Box m={3} />\r\n      </Box> */}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable radix */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable array-callback-return */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CardContent, IconButton, Box } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getOrganizations } from '../../redux/slices/adminSetting';\r\n\r\nimport DayScheduleButton from '../dashboard-component/DayScheduleButton';\r\n\r\nconst Weeks = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\r\nconst Months = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Set',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec'\r\n];\r\nconst MonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nfunction init() {\r\n  const date = new Date();\r\n  const firstDate = getFirstDay(date.getFullYear(), date.getMonth());\r\n  return firstDate;\r\n}\r\n\r\nfunction getDaybyWeek(year, month) {\r\n  const monthCalendar = [];\r\n  let day = 0;\r\n  let monthday = MonthDays[month];\r\n  const firstDay = getFirstDay(year, month).getDay();\r\n  const startPos = firstDay - 1 < 0 ? 6 : firstDay - 1; // when first day of this month is Sunday.\r\n  if (month === 1) monthday = year % 4 === 0 ? 29 : monthday; // in case of leap year\r\n  const endPos = startPos + monthday - 1;\r\n\r\n  for (let i = 0; i < 42; i += 1) {\r\n    // the position of first day of this month.\r\n    if (i < startPos) monthCalendar[i] = -1;\r\n    else if (i > endPos) monthCalendar[i] = -1;\r\n    else {\r\n      day += 1;\r\n      monthCalendar[i] = day;\r\n    }\r\n  }\r\n\r\n  const res = [];\r\n  for (let i = 0; i < 42; i += 7) {\r\n    const row = [];\r\n    for (let j = 0, k = i; j < 7; j += 1, k += 1) {\r\n      row.push(monthCalendar[k]); // save by week.\r\n    }\r\n    res.push(row);\r\n  }\r\n  if (res[5][0] === -1) res.pop();\r\n  return res;\r\n}\r\n\r\n// eslint-disable-next-line prettier/prettier\r\nfunction getCalendar(days, status, allStatus, schedules, isWorkingArr, month, year) {\r\n  const monthCalendar = [];\r\n\r\n  days.map((weekdays) => {\r\n    const weeks = [];\r\n    for (let dIndex = 0; dIndex < weekdays.length; dIndex += 1) {\r\n      const dayObj = {};\r\n      for (let i = 0; i < status.length; i += 1) {\r\n        dayObj.day = weekdays[dIndex];\r\n        if (weekdays[dIndex] - 1 === i) {\r\n          // set occupancy by day\r\n          const newData = [];\r\n          allStatus.map((stat) => {\r\n            const dData = stat.schedule[month][weekdays[dIndex] - 1];\r\n            const rObj = {\r\n              userId: stat.userId,\r\n              data: dData\r\n            };\r\n            newData.push(rObj);\r\n          });\r\n\r\n          const schArr = [];\r\n          schedules.map((sche) => {\r\n            if (sche.type === 'office') {\r\n              const userArr = [];\r\n              newData.map((user) => {\r\n                if (user.data.isWork) {\r\n                  if (user.data.isHalf) {\r\n                    if (\r\n                      sche.id === user.data.morning.id &&\r\n                      sche.type === user.data.morning.type\r\n                    ) {\r\n                      userArr.push(user.userId);\r\n                    } else if (\r\n                      sche.id === user.data.afternoon.id &&\r\n                      sche.type === user.data.afternoon.type\r\n                    ) {\r\n                      userArr.push(user.userId);\r\n                    }\r\n                  } else if (!user.data.isHalf) {\r\n                    if (\r\n                      sche.id === user.data.morning.id &&\r\n                      sche.type === user.data.morning.type\r\n                    ) {\r\n                      userArr.push(user.userId);\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n              let schObj = {};\r\n              const occupancy = (userArr.length / sche.capacity) * 100;\r\n              schObj = {\r\n                id: sche.id,\r\n                schTitle: sche.title,\r\n                users: userArr,\r\n                capacity: sche.capacity,\r\n                occupancy: parseInt(occupancy)\r\n              };\r\n              schArr.push(schObj);\r\n            }\r\n          });\r\n\r\n          const today = new Date().getDate();\r\n          const thisMonth = new Date().getMonth();\r\n\r\n          const isAvailable =\r\n            thisMonth < month\r\n              ? true\r\n              : today <= weekdays[dIndex] + 1 && thisMonth === month;\r\n\r\n          let isActive = false;\r\n\r\n          if (isWorkingArr[(dIndex + 1) % 7]) {\r\n            isActive = isAvailable;\r\n          }\r\n\r\n          dayObj.year = year;\r\n          dayObj.month = month;\r\n          dayObj.day = weekdays[dIndex];\r\n          dayObj.officeInfo = schArr;\r\n          dayObj.icon = status[i].icon;\r\n          dayObj.halfday = status[i].halfday;\r\n          dayObj.selected = false;\r\n          dayObj.isActive = isActive;\r\n          break;\r\n        }\r\n      }\r\n      weeks.push(dayObj);\r\n    }\r\n    monthCalendar.push(weeks);\r\n  });\r\n  return monthCalendar;\r\n}\r\n\r\nfunction getFirstDay(y, m) {\r\n  return new Date(y, m, 1);\r\n}\r\n\r\nfunction getMonthNamebyNumber(month) {\r\n  return Months[month];\r\n}\r\n\r\n// styling conponent\r\nconst GridContainer = styled('div')(() => ({\r\n  display: 'flex'\r\n}));\r\n\r\nconst GridItem = styled('div')(() => ({\r\n  flex: 1\r\n}));\r\n\r\nCalendarCard.propTypes = {\r\n  allStatuses: PropTypes.array,\r\n  schedule: PropTypes.array,\r\n  daystatus: PropTypes.array,\r\n  officeFilterId: PropTypes.number,\r\n  isWorkingArr: PropTypes.array,\r\n  viewDetailByClick: PropTypes.func\r\n};\r\n\r\nexport default function CalendarCard({\r\n  daystatus,\r\n  allStatuses,\r\n  schedule,\r\n  officeFilterId,\r\n  isWorkingArr,\r\n  viewDetailByClick\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { organizations } = useSelector((state) => state.adminSetting);\r\n\r\n  const [month, setMonth] = useState(init().getMonth());\r\n  const [year, setYear] = useState(init().getFullYear());\r\n  const [calendar, setCalendar] = useState([]);\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [isDisableNext, setIsDisableNext] = useState(false);\r\n  const [isDisableBack, setIsDisableBack] = useState(false);\r\n  const [min, setMin] = useState(0);\r\n  const [max, setMax] = useState(0);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrganizations());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const { result } = organizations;\r\n    let mRange = 0;\r\n    if (result !== undefined) {\r\n      mRange = result.calendar.monthRange;\r\n      const isOdd = mRange % 2;\r\n      setMin(1);\r\n      if (isOdd) {\r\n        setMax(mRange);\r\n        setCount((mRange - 1) / 2 + 1);\r\n      } else {\r\n        setMax(mRange + 1);\r\n        setCount(mRange / 2 + 1);\r\n      }\r\n    }\r\n  }, [organizations]);\r\n\r\n  useEffect(() => {\r\n    const monthData = daystatus;\r\n    // was changed regarding allStatuses, schedule\r\n    if (monthData.length > 0) {\r\n      const days = getDaybyWeek(year, month);\r\n      const calendarInfo = getCalendar(\r\n        days,\r\n        monthData[month],\r\n        allStatuses,\r\n        schedule,\r\n        isWorkingArr,\r\n        month,\r\n        year\r\n      );\r\n\r\n      setCalendar(calendarInfo);\r\n    }\r\n  }, [daystatus, month, year, isWorkingArr]);\r\n  // }, [daystatus, month, year, allStatuses, schedule]);\r\n\r\n  useEffect(() => {\r\n    if (count < max) {\r\n      setIsDisableNext(false);\r\n    }\r\n    if (count > min) {\r\n      setIsDisableBack(false);\r\n    }\r\n  }, [count]);\r\n\r\n  const handleBackMonth = () => {\r\n    const newCount = count - 1;\r\n    if (newCount < min) {\r\n      setIsDisableBack(true);\r\n    } else {\r\n      let m = month - 1;\r\n      let y = year;\r\n      y = m < 0 ? year - 1 : year;\r\n      m = m < 0 ? 11 : m;\r\n      setYear(y);\r\n      setMonth(m);\r\n      setCount(newCount);\r\n    }\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    const newCount = count + 1;\r\n    if (newCount > max) {\r\n      setIsDisableNext(true);\r\n    } else {\r\n      let m = month + 1;\r\n      let y = year;\r\n      y = m > 11 ? year + 1 : year;\r\n      m = m > 11 ? 0 : m;\r\n      setYear(y);\r\n      setMonth(m);\r\n      setCount(newCount);\r\n    }\r\n  };\r\n\r\n  const handleSelected = (selected, year, month, day) => {\r\n    const agenda = calendar;\r\n    calendar.map((weeks, wIndex) => {\r\n      weeks.map((item, dIndex) => {\r\n        agenda[wIndex][dIndex].selected = false;\r\n        if (item.day === day) agenda[wIndex][dIndex].selected = selected;\r\n      });\r\n    });\r\n    setCalendar([...agenda]);\r\n    viewDetailByClick(year, month, day);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent\r\n        sx={{\r\n          padding: theme.spacing(2, 3),\r\n          [theme.breakpoints.down('md')]: { padding: theme.spacing(1, 0.2) }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <IconButton\r\n            disabled={isDisableBack}\r\n            aria-label=\"delete\"\r\n            onClick={handleBackMonth}\r\n          >\r\n            <ArrowBackIosIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={{ display: 'flex', alignItems: 'center' }}\r\n          >\r\n            {getMonthNamebyNumber(month)} {year}\r\n          </Typography>\r\n          <IconButton\r\n            disabled={isDisableNext}\r\n            aria-label=\"delete\"\r\n            onClick={handleNextMonth}\r\n          >\r\n            <ArrowForwardIosIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n        </Box>\r\n        <Box m={1} />\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <GridContainer spacing={2}>\r\n            {Weeks.map((week, index) => (\r\n              <GridItem key={index}>\r\n                <Typography variant=\"caption\">{week}</Typography>\r\n              </GridItem>\r\n            ))}\r\n          </GridContainer>\r\n        </Box>\r\n        <Box m={1} />\r\n        <Box sx={{ width: '100%', textAlign: 'center' }}>\r\n          {calendar.map((weeks, wIndex) => (\r\n            <GridContainer spacing={3} key={wIndex}>\r\n              {weeks.map((day, dIndex) => (\r\n                <GridItem key={dIndex}>\r\n                  {day.day > 0 && (\r\n                    <DayScheduleButton\r\n                      year={day.year}\r\n                      month={day.month}\r\n                      day={day.day}\r\n                      officeFilterId={officeFilterId}\r\n                      officeInfo={day.officeInfo}\r\n                      icon={day.icon}\r\n                      halfday={day.halfday}\r\n                      Selection={handleSelected}\r\n                      isSelected={day.selected}\r\n                      isActive={day.isActive}\r\n                    />\r\n                  )}\r\n                </GridItem>\r\n              ))}\r\n            </GridContainer>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from '@material-ui/core';\r\n\r\nDetailOfficeButtons.propTypes = {\r\n  officeGroups: PropTypes.array.isRequired,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function DetailOfficeButtons({ officeGroups, sx }) {\r\n  return (\r\n    <ToggleButtonGroup\r\n      aria-label=\"day type\"\r\n      sx={{\r\n        textAlign: 'center',\r\n        ...sx\r\n      }}\r\n    >\r\n      {officeGroups.map((item) => (\r\n        <ToggleButton\r\n          key={item.id}\r\n          value={item.id}\r\n          style={{ height: '42px', zIndex: 1202 }}\r\n          sx={{\r\n            mr: 1,\r\n            mb: 1,\r\n            heigth: '42px !important',\r\n            borderRadius: '20px !important',\r\n            border: '1px solid #00AB55',\r\n            borderLeft: '1px solid #00AB55 !important',\r\n            color: '#00AB55',\r\n            backgroundColor: 'white',\r\n            '&.css-am98t8-MuiButtonBase-root-MuiToggleButton-root': {\r\n              zIndex: '1202 !important'\r\n            }\r\n          }}\r\n        >\r\n          <Box sx={{ display: 'flex' }}>\r\n            <span role=\"img\" aria-label=\"Panda\" style={{ fontSize: '23px' }}>\r\n              {item.icon}\r\n            </span>\r\n            <Typography variant=\"body2\" sx={{ paddingTop: 1, ml: 1 }}>\r\n              {item.label}\r\n            </Typography>\r\n          </Box>\r\n        </ToggleButton>\r\n      ))}\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\nimport { withStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Typography, ToggleButtonGroup, ToggleButton } from '@material-ui/core';\r\n\r\nDetailTeamButtons.propTypes = {\r\n  daygroups: PropTypes.array,\r\n  sx: PropTypes.object\r\n};\r\n\r\nconst StyledToggleButtonGroup = withStyles((theme) => ({\r\n  grouped: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))(ToggleButtonGroup);\r\n\r\nexport default function DetailTeamButtons({ daygroups, sx }) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledToggleButtonGroup aria-label=\"team category\">\r\n      {daygroups.map((item) => (\r\n        <ToggleButton\r\n          key={item.id}\r\n          value={item.id}\r\n          sx={{\r\n            py: 0.6,\r\n            borderColor: item.color,\r\n            borderRadius: `${theme.spacing(3)} !important`,\r\n            borderLeft: `1px solid ${item.color} !important`,\r\n            color: 'white',\r\n            backgroundColor: item.color,\r\n            '&:hover': {\r\n              backgroundColor: item.color\r\n            },\r\n            ...sx\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>\r\n            {item.label}\r\n          </Typography>\r\n        </ToggleButton>\r\n      ))}\r\n    </StyledToggleButtonGroup>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n// material\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\nimport { Box, Drawer, Typography } from '@material-ui/core';\r\n// components\r\nimport Scrollbar from '../Scrollbar';\r\n//\r\nimport SelfSettingButton from '../dashboard-component/SelftSettingButton';\r\nimport UserScheduleStatus from '../dashboard-component/UserScheduleStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DRAWER_WIDTH = 480;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up(1400)]: {\r\n    flexShrink: 0,\r\n    width: DRAWER_WIDTH\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRightSideBar.propTypes = {\r\n  todayTitle: PropTypes.string,\r\n  daystatus: PropTypes.array,\r\n  schedule: PropTypes.array,\r\n  iconProps: PropTypes.func,\r\n  cToday: PropTypes.object,\r\n  notStatusUsers: PropTypes.array,\r\n  scheduleUsers: PropTypes.array,\r\n  isOpenSidebar: PropTypes.bool,\r\n  isDetail: PropTypes.bool,\r\n  currentUser: PropTypes.object,\r\n  onCloseSidebar: PropTypes.func\r\n};\r\n\r\nexport default function RightSideBar({\r\n  todayTitle,\r\n  daystatus,\r\n  schedule,\r\n  iconProps,\r\n  cToday,\r\n  notStatusUsers,\r\n  scheduleUsers,\r\n  isOpenSidebar,\r\n  isDetail,\r\n  currentUser,\r\n  onCloseSidebar\r\n}) {\r\n  const { pathname } = useLocation();\r\n  const theme = useTheme();\r\n\r\n  const [icon, setIcon] = useState('');\r\n  const [isHalf, setIsHalf] = useState(false);\r\n  const [isWork, setIsWork] = useState(false);\r\n  const [detail, setDetail] = useState({});\r\n  const [weekTitle, setWeekTitle] = useState('');\r\n  const [notStatusYet, setNotStatusYet] = useState(false);\r\n  const [sTitle, setTitle] = useState('');\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpenSidebar && onCloseSidebar) {\r\n      onCloseSidebar();\r\n    }\r\n  }, [isOpenSidebar, onCloseSidebar, pathname]);\r\n\r\n  useEffect(() => {\r\n    if (daystatus.length > 0 && schedule.length > 0) {\r\n      daystatus.map((months, mIndex) => {\r\n        months.map((day) => {\r\n          if (mIndex === cToday.month && day.id === cToday.day) {\r\n            setIcon(day.icon);\r\n            setIsHalf(day.halfday);\r\n            setIsWork(day.work);\r\n            setWeekTitle(day.weekTitle);\r\n            setIsActive(day.isActive);\r\n            const detailInfo = {\r\n              morning: {\r\n                id: day.detail.morning.id,\r\n                type: day.detail.morning.type\r\n              },\r\n              afternoon: {\r\n                id: day.detail.afternoon.id,\r\n                type: day.detail.afternoon.type\r\n              }\r\n            };\r\n            setDetail(detailInfo);\r\n            let notStatus = true;\r\n            schedule.map((sche) => {\r\n              if (\r\n                sche.id === day.detail.morning.id &&\r\n                sche.type === day.detail.morning.type\r\n              ) {\r\n                notStatus = false;\r\n                setTitle(sche.title);\r\n              }\r\n            });\r\n            setNotStatusYet(notStatus);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }, [daystatus, schedule, cToday]);\r\n\r\n  const changeIcon = (icon1, icon2, detail1, detail2, status) => {\r\n    iconProps(icon1, icon2, detail1, detail2, status, cToday.month, cToday.day);\r\n  };\r\n\r\n  const renderContent = (\r\n    <Scrollbar>\r\n      <Box sx={{ px: 2.5, py: 3, mt: 10 }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{ color: 'text.primary', textAlign: 'center' }}\r\n        >\r\n          {todayTitle}\r\n        </Typography>\r\n        <SelfSettingButton\r\n          disabled={isDetail}\r\n          currentUser={currentUser}\r\n          schedule={schedule}\r\n          icon={icon}\r\n          halfday={isHalf}\r\n          work={isWork}\r\n          detailInfo={detail}\r\n          weekTitle={weekTitle}\r\n          iconProps={changeIcon}\r\n          statusTitle={sTitle}\r\n          notStatus={notStatusYet}\r\n          isActive={isActive}\r\n        />\r\n        <Box m={5} />\r\n        <UserScheduleStatus\r\n          notStatusUsers={notStatusUsers}\r\n          scheduleUsers={scheduleUsers}\r\n        />\r\n      </Box>\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box sx={{ [theme.breakpoints.down(1400)]: { display: 'none' } }}>\r\n        <Drawer\r\n          open\r\n          anchor=\"right\"\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: { width: DRAWER_WIDTH }\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      </Box>\r\n    </RootStyle>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable radix */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\n\r\nimport { Container, Box, Stack, Avatar, Typography } from '@material-ui/core';\r\n// ----------------------------------------------------------------------\r\n// hooks\r\nimport useGeneral from '../../hooks/useGeneral';\r\nimport useAuth from '../../hooks/useAuth';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport {\r\n  getCalendar,\r\n  getCalendarList,\r\n  getAllStatusById,\r\n  getUsersByCompany\r\n} from '../../redux/slices/general';\r\nimport {\r\n  getOfficeList,\r\n  getTeamList,\r\n  getOrganizations\r\n} from '../../redux/slices/adminSetting';\r\n\r\nimport { getUserList } from '../../redux/slices/user';\r\n\r\nimport CalendarCard from './CalendarCard';\r\nimport DayStatusButtonGroup from '../dashboard-component/DayStatusButtonGroup';\r\nimport TeamCategoryGroup from '../dashboard-component/TeamCategoryGroup';\r\n\r\nimport DetailOfficeButtons from '../dashboard-component/DetailOfficeButtons';\r\nimport DetailTeamButtons from '../dashboard-component/DetailTeamButtons';\r\n\r\nimport RightSideBar from './RightSideBar';\r\n\r\nexport default function CalendarContent() {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const { updateSchedule } = useGeneral();\r\n  const { user } = useAuth();\r\n  const { officeList, teamList } = useSelector((state) => state.adminSetting);\r\n  const { calendar, calendarList, allStatus, allUsers } = useSelector(\r\n    (state) => state.general\r\n  );\r\n  const { userList } = useSelector((state) => state.user);\r\n  const { organizations } = useSelector((state) => state.adminSetting);\r\n\r\n  const { pathname } = useLocation();\r\n  const { userId } = useParams();\r\n  const isDetail = pathname.includes('detail');\r\n  const currentCalendar = calendarList.find(\r\n    (calendar) => calendar.userId === Number(userId)\r\n  );\r\n\r\n  const currentUser = userList.find((user) => user.id === Number(userId));\r\n\r\n  // startind the code\r\n\r\n  const [newCalendar, setNewCalendar] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [teamIds, setTeamIds] = useState([]);\r\n\r\n  const [offices, setOffices] = useState([]);\r\n  const [officeIds, setOfficeIds] = useState(initialStatus);\r\n\r\n  const [calendarProps, setCalendarProps] = useState([]);\r\n\r\n  const [todayTitle, setTodayTitle] = useState('');\r\n\r\n  const [userInfo, setUserInfo] = useState({});\r\n\r\n  // calendar setting\r\n  const [cToday, setCToday] = useState({});\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [allStatuses, setAllStatuses] = useState([]);\r\n  const [allMembers, setAllMembers] = useState([]);\r\n\r\n  const [isWorking, setIsWorking] = useState([]);\r\n\r\n  // right side bar user setting\r\n  const [scheduleUsers, setScheduleUsers] = useState([]);\r\n  const [notStatusUsers, setNotStatusUsers] = useState([]);\r\n\r\n  // detail info\r\n\r\n  const [cUser, setCUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(getCalendar());\r\n    dispatch(getCalendarList());\r\n    dispatch(getOfficeList());\r\n    dispatch(getTeamList());\r\n    dispatch(getUserList());\r\n    dispatch(getOrganizations());\r\n    dispatch(getAllStatusById());\r\n    dispatch(getUsersByCompany());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isDetail &&\r\n      currentCalendar !== undefined &&\r\n      currentUser !== undefined\r\n    ) {\r\n      const { sch } = currentCalendar;\r\n      setNewCalendar(sch);\r\n      setCUser(currentUser);\r\n\r\n      const { officeIds, teamIds } = currentUser;\r\n      const OfficeStatus = [];\r\n      officeList.map((office) => {\r\n        officeIds.map((officeId) => {\r\n          if (office.id === Number(officeId)) {\r\n            const data = {\r\n              id: office.id,\r\n              label: office.name,\r\n              icon: office.emoji\r\n            };\r\n            OfficeStatus.push(data);\r\n          }\r\n        });\r\n      });\r\n\r\n      const TeamStatus = [];\r\n      teamList.map((team) => {\r\n        teamIds.map((teamId) => {\r\n          if (team.id === Number(teamId)) {\r\n            const data = {\r\n              id: team.id,\r\n              label: team.name,\r\n              color: team.color\r\n            };\r\n            TeamStatus.push(data);\r\n          }\r\n        });\r\n      });\r\n\r\n      setOffices([...OfficeStatus]);\r\n      setTeams([...TeamStatus]);\r\n    } else {\r\n      setNewCalendar(calendar);\r\n      const { offices, teams, roles } = user;\r\n      const OfficeStatus = [];\r\n      const TeamStatus = [];\r\n      if (roles === 'ADMIN') {\r\n        officeList.map((office) => {\r\n          const data = {\r\n            id: office.id,\r\n            label: office.name,\r\n            icon: office.emoji\r\n          };\r\n\r\n          OfficeStatus.push(data);\r\n        });\r\n\r\n        teamList.map((team) => {\r\n          const data = {\r\n            id: team.id,\r\n            label: team.name,\r\n            color: team.color\r\n          };\r\n\r\n          TeamStatus.push(data);\r\n        });\r\n      } else {\r\n        officeList.map((office) => {\r\n          offices.map((uOfficeId) => {\r\n            if (Number(office.id) === Number(uOfficeId)) {\r\n              const data = {\r\n                id: office.id,\r\n                label: office.name,\r\n                icon: office.emoji\r\n              };\r\n\r\n              OfficeStatus.push(data);\r\n            }\r\n          });\r\n        });\r\n\r\n        teamList.map((team) => {\r\n          teams.map((uTeamId) => {\r\n            if (Number(team.id) === Number(uTeamId)) {\r\n              const data = {\r\n                id: team.id,\r\n                label: team.name,\r\n                color: team.color\r\n              };\r\n\r\n              TeamStatus.push(data);\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      setOffices([...OfficeStatus]);\r\n      setTeams([...TeamStatus]);\r\n    }\r\n  }, [\r\n    currentCalendar,\r\n    currentUser,\r\n    isDetail,\r\n    calendar,\r\n    officeList,\r\n    teamList,\r\n    user\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setUserInfo(user);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (allStatus.length > 0) {\r\n      setAllStatuses(allStatus);\r\n    }\r\n  }, [allStatus]);\r\n\r\n  useEffect(() => {\r\n    if (allUsers.length > 0) {\r\n      setAllMembers(allUsers);\r\n    }\r\n  }, [allUsers]);\r\n\r\n  useEffect(() => {\r\n    const curr = new Date();\r\n    const today = {\r\n      year: curr.getFullYear(),\r\n      month: curr.getMonth(),\r\n      day: curr.getDate()\r\n    };\r\n\r\n    const dayOfweek =\r\n      WeekListTitles[curr.getDay() - 1 < 0 ? 6 : curr.getDay() - 1];\r\n    const tmpMonth = Months[curr.getMonth()];\r\n    const tmpYear = curr.getFullYear();\r\n    const tmpTodaytitle = `${dayOfweek} ${today.day} ${tmpMonth}. ${tmpYear}`;\r\n\r\n    setTodayTitle(tmpTodaytitle);\r\n\r\n    setCToday(today);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newCalendar.length > 0) {\r\n      const today = new Date().getDate();\r\n      const tMonth = new Date().getMonth();\r\n      const yearData = [];\r\n      newCalendar.map((months, mIndex) => {\r\n        const curr = new Date();\r\n        curr.setMonth(mIndex);\r\n        const thisMonth = months;\r\n\r\n        const monthData = [];\r\n\r\n        thisMonth.map((mDay, dIndex) => {\r\n          curr.setDate(dIndex + 1);\r\n          const dayListIndex = curr.getDay() - 1 < 0 ? 6 : curr.getDay() - 1;\r\n\r\n          // eslint-disable-next-line prettier/prettier\r\n          const isAvailable = tMonth < mIndex ? true : today <= dIndex + 1 && tMonth === mIndex;\r\n\r\n          let isActive = false;\r\n\r\n          if (isWorking[curr.getDay()]) {\r\n            isActive = isAvailable;\r\n          }\r\n\r\n          const dayObj = {\r\n            id: dIndex + 1,\r\n            weekTitle: `${WeekListTitles[dayListIndex]} ${\r\n              Months[curr.getMonth()]\r\n            } ${dIndex + 1}`,\r\n            icon: mDay.icon,\r\n            detail: {\r\n              morning: { id: mDay.morning.id, type: mDay.morning.type },\r\n              afternoon: { id: mDay.afternoon.id, type: mDay.afternoon.type }\r\n            },\r\n            halfday: mDay.isHalf,\r\n            work: mDay.isWork,\r\n            isActive\r\n          };\r\n          monthData.push(dayObj);\r\n        });\r\n        yearData.push(monthData);\r\n      });\r\n\r\n      setCalendarProps(yearData);\r\n    }\r\n  }, [newCalendar, isWorking]);\r\n\r\n  useEffect(() => {\r\n    if (organizations.result !== undefined) {\r\n      const { statuses, calendar } = organizations.result;\r\n\r\n      const { workDays } = calendar;\r\n\r\n      let wDays = [...workDays];\r\n      wDays = wDays.sort();\r\n\r\n      const isWorkingArr = [];\r\n\r\n      for (let i = 0; i < 7; i += 1) {\r\n        let isWorking = false;\r\n        wDays.map((day) => {\r\n          if (i === day) isWorking = true;\r\n        });\r\n        if (isWorking) isWorkingArr.push(1);\r\n        else isWorkingArr.push(0);\r\n      }\r\n\r\n      setIsWorking([...isWorkingArr]);\r\n\r\n      const schedules = [];\r\n      const { basicList, customList } = statuses;\r\n      officeList.map((office) => {\r\n        const rowObj = {\r\n          id: office.id,\r\n          type: 'office',\r\n          emoji: office.emoji,\r\n          title: office.name,\r\n          capacity: office.capacity\r\n        };\r\n        schedules.push(rowObj);\r\n      });\r\n\r\n      basicList.map((basic) => {\r\n        if (basic.isActive > 0) {\r\n          const rowObj = {\r\n            id: basic.id,\r\n            type: 'basic',\r\n            emoji: basic.emoji,\r\n            title: basic.title\r\n          };\r\n          schedules.push(rowObj);\r\n        }\r\n      });\r\n\r\n      customList.map((custom) => {\r\n        if (custom.isActive > 0) {\r\n          const rowObj = {\r\n            id: custom.id,\r\n            type: 'custom',\r\n            emoji: custom.emoji,\r\n            title: custom.title\r\n          };\r\n          schedules.push(rowObj);\r\n        }\r\n      });\r\n      setSchedule(schedules);\r\n    }\r\n  }, [organizations, officeList]);\r\n\r\n  useEffect(() => {\r\n    const { notStatus, scheduleUsers } = getScheduleUsersInfo(\r\n      userInfo,\r\n      allStatuses,\r\n      allMembers,\r\n      schedule,\r\n      cToday.month,\r\n      cToday.day\r\n    );\r\n\r\n    setNotStatusUsers(notStatus);\r\n    setScheduleUsers(scheduleUsers);\r\n  }, [allStatuses, cToday, allMembers, userInfo]);\r\n\r\n  const setStatusProps = (selectedIds) => {\r\n    setOfficeIds(selectedIds);\r\n  };\r\n\r\n  const handleTeamSelected = (teamStatus) => {\r\n    setTeamIds(teamStatus);\r\n  };\r\n\r\n  const handleClickShowDetail = (year, month, day) => {\r\n    dispatch(getAllStatusById());\r\n    const today = {\r\n      year,\r\n      month,\r\n      day\r\n    };\r\n    setCToday(today);\r\n\r\n    const curr = new Date();\r\n    curr.setMonth(month);\r\n    curr.setDate(day);\r\n    const dayOfweek =\r\n      WeekListTitles[curr.getDay() - 1 < 0 ? 6 : curr.getDay() - 1];\r\n    const tmpMonth = Months[curr.getMonth()];\r\n    const tmpYear = curr.getFullYear();\r\n    const tmpTodaytitle = `${dayOfweek} ${day} ${tmpMonth}. ${tmpYear}`;\r\n\r\n    setTodayTitle(tmpTodaytitle);\r\n  };\r\n\r\n  // change icon when set icon in schedule card\r\n  const changeIcon = (icon1, icon2, detail1, detail2, status, month, day) => {\r\n    let emoji1 = '';\r\n    let emoji2 = '';\r\n    let resIcon = '';\r\n    schedule.map((item, i) => {\r\n      if (i === icon1) emoji1 = item.emoji;\r\n      if (i === icon2) emoji2 = item.emoji;\r\n    });\r\n    let dayStatus = status;\r\n    if (icon1 === icon2) dayStatus = false;\r\n    resIcon = dayStatus ? `${emoji1}${emoji2}` : emoji1;\r\n    const CalendarSchedule = calendarProps;\r\n    let settingDay = 0;\r\n    calendarProps.map((months, mIndex) => {\r\n      months.map((schedule, sIndex) => {\r\n        if (mIndex === month && schedule.id === day) {\r\n          CalendarSchedule[mIndex][sIndex].icon = resIcon;\r\n          CalendarSchedule[mIndex][sIndex].halfday = dayStatus;\r\n          CalendarSchedule[mIndex][sIndex].work = true;\r\n          CalendarSchedule[mIndex][sIndex].detail.morning.id = detail1.id;\r\n          CalendarSchedule[mIndex][sIndex].detail.morning.type = detail1.type;\r\n          settingDay = sIndex;\r\n        }\r\n      });\r\n    });\r\n\r\n    const updatedSchedule = {\r\n      month,\r\n      day: settingDay,\r\n      emoji: resIcon,\r\n      morning: detail1,\r\n      afternoon: detail2,\r\n      isHalf: dayStatus,\r\n      isWork: true\r\n    };\r\n\r\n    updateSchedule({ updatedSchedule }).then(() => {\r\n      dispatch(getAllStatusById());\r\n    });\r\n    setCalendarProps([...CalendarSchedule]);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        marginTop: -10,\r\n        [theme.breakpoints.down('md')]: { marginTop: 0 }\r\n      }}\r\n    >\r\n      <Container maxWidth=\"xl\">\r\n        <Container\r\n          maxWidth=\"sm\"\r\n          sx={{ [theme.breakpoints.down('md')]: { px: 0 } }}\r\n        >\r\n          {isDetail ? (\r\n            <Box sx={{ mb: 3, mt: 1 }}>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                <Avatar\r\n                  alt={cUser.name}\r\n                  src={cUser.photoURL}\r\n                  sx={{ width: theme.spacing(10), height: theme.spacing(10) }}\r\n                />\r\n                <Box>\r\n                  <Typography variant=\"h6\" noWrap>\r\n                    {cUser.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" noWrap>\r\n                    {cUser.jobtitle}\r\n                  </Typography>\r\n                </Box>\r\n              </Stack>\r\n              <Box m={3} />\r\n              <Box sx={{ pl: 7 }}>\r\n                <DetailOfficeButtons officeGroups={offices} />\r\n                <DetailTeamButtons\r\n                  teamInitProps={teamIds}\r\n                  daygroups={teams}\r\n                  teamStatusProps={handleTeamSelected}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <DayStatusButtonGroup\r\n                officeInitProps={officeIds}\r\n                statusProps={setStatusProps}\r\n                officeGroups={offices}\r\n                isMulti={false}\r\n              />\r\n              <TeamCategoryGroup\r\n                teamInitProps={teamIds}\r\n                daygroups={teams}\r\n                teamStatusProps={handleTeamSelected}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <CalendarCard\r\n            officeFilterId={officeIds[0]}\r\n            allStatuses={allStatuses}\r\n            schedule={schedule}\r\n            daystatus={calendarProps}\r\n            isWorkingArr={isWorking}\r\n            viewDetailByClick={handleClickShowDetail}\r\n          />\r\n        </Container>\r\n      </Container>\r\n      <RightSideBar\r\n        todayTitle={todayTitle}\r\n        daystatus={calendarProps}\r\n        schedule={schedule}\r\n        iconProps={changeIcon}\r\n        cToday={cToday}\r\n        scheduleUsers={scheduleUsers}\r\n        notStatusUsers={notStatusUsers}\r\n        isDetail={isDetail}\r\n        currentUser={cUser}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst initialStatus = [1];\r\nconst WeekListTitles = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n  'Sunday'\r\n];\r\n\r\nconst Months = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Set',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec'\r\n];\r\n\r\nfunction getScheduleUsersInfo(\r\n  userInfo,\r\n  allStatuses,\r\n  allMembers,\r\n  schedule,\r\n  cMonth,\r\n  cToday\r\n) {\r\n  const resData = {};\r\n  const newData = [];\r\n\r\n  allStatuses.map((status) => {\r\n    const dData = status.schedule[cMonth][cToday - 1];\r\n    const rObj = {\r\n      userId: status.userId,\r\n      data: dData\r\n    };\r\n    newData.push(rObj);\r\n  });\r\n\r\n  let schArr = [];\r\n  let notStatus = [];\r\n  schedule.map((sche) => {\r\n    const userArr = [];\r\n    newData.map((user) => {\r\n      if (user.data.isWork) {\r\n        if (user.data.isHalf) {\r\n          if (\r\n            sche.id === user.data.morning.id &&\r\n            sche.type === user.data.morning.type\r\n          ) {\r\n            userArr.push(user.userId);\r\n          } else if (\r\n            sche.id === user.data.afternoon.id &&\r\n            sche.type === user.data.afternoon.type\r\n          ) {\r\n            userArr.push(user.userId);\r\n          }\r\n        } else if (!user.data.isHalf) {\r\n          if (\r\n            sche.id === user.data.morning.id &&\r\n            sche.type === user.data.morning.type\r\n          ) {\r\n            userArr.push(user.userId);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    if (userArr.length > 0) {\r\n      let schObj = {};\r\n      if (sche.type === 'office') {\r\n        const occupancy = (userArr.length / sche.capacity) * 100;\r\n        schObj = {\r\n          id: sche.id,\r\n          emoji: sche.emoji,\r\n          schTitle: sche.title,\r\n          users: userArr,\r\n          type: 'office',\r\n          capacity: sche.capacity,\r\n          occupancy: parseInt(occupancy)\r\n        };\r\n      } else {\r\n        schObj = {\r\n          id: sche.id,\r\n          emoji: sche.emoji,\r\n          schTitle: sche.title,\r\n          users: userArr,\r\n          type: 'status'\r\n        };\r\n      }\r\n      schArr.push(schObj);\r\n    }\r\n  });\r\n\r\n  newData.map((user) => {\r\n    let isSet = false;\r\n    schArr.map((sUser) => {\r\n      for (let i = 0; i < sUser.users.length; i += 1) {\r\n        if (user.userId === sUser.users[i]) {\r\n          isSet = true;\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    if (!isSet) {\r\n      notStatus.push(user.userId);\r\n    }\r\n  });\r\n\r\n  const tmpSchArr = schArr;\r\n  tmpSchArr.map((sche, sIndex) => {\r\n    const updatedUsers = [];\r\n    sche.users.map((userId) => {\r\n      allMembers.map((member) => {\r\n        if (userId === member.id) {\r\n          let isTeam = false;\r\n          if (userInfo.teams.length > 0) {\r\n            for (let i = 0; i < userInfo.teams.length; i += 1) {\r\n              for (let j = 0; j < member.teamIds.length; j += 1) {\r\n                if (Number(userInfo.teams[i]) === member.teamIds[j]) {\r\n                  isTeam = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          const userObj = {\r\n            id: userId,\r\n            photoURL: member.photoURL,\r\n            name: member.name,\r\n            isTeam\r\n          };\r\n          updatedUsers.push(userObj);\r\n        }\r\n      });\r\n    });\r\n    schArr[sIndex].users = updatedUsers;\r\n    const tmpSchArr = schArr;\r\n    schArr = [];\r\n    for (let i = 0; i < tmpSchArr.length; i += 1) {\r\n      let isTeam = false;\r\n      for (let j = 0; j < tmpSchArr[i].users.length; j += 1) {\r\n        if (tmpSchArr[i].users[j].isTeam) {\r\n          isTeam = true;\r\n          break;\r\n        }\r\n      }\r\n      if (isTeam) {\r\n        schArr.push(tmpSchArr[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < tmpSchArr.length; i += 1) {\r\n      let isTeam = false;\r\n      for (let j = 0; j < tmpSchArr[i].users.length; j += 1) {\r\n        if (tmpSchArr[i].users[j].isTeam) {\r\n          isTeam = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!isTeam) {\r\n        schArr.push(tmpSchArr[i]);\r\n      }\r\n    }\r\n  });\r\n\r\n  if (notStatus.length > 0) {\r\n    const tmpNotStatus = notStatus;\r\n    const updatedUsers = [];\r\n    tmpNotStatus.map((userId) => {\r\n      allMembers.map((member) => {\r\n        if (userId === member.id) {\r\n          let isTeam = false;\r\n          if (userInfo.teams.length > 0) {\r\n            for (let i = 0; i < userInfo.teams.length; i += 1) {\r\n              for (let j = 0; j < member.teamIds.length; j += 1) {\r\n                if (Number(userInfo.teams[i]) === member.teamIds[j]) {\r\n                  isTeam = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          const userObj = {\r\n            id: userId,\r\n            photoURL: member.photoURL,\r\n            name: member.name,\r\n            isTeam\r\n          };\r\n          updatedUsers.push(userObj);\r\n        }\r\n      });\r\n    });\r\n\r\n    notStatus = updatedUsers;\r\n    resData.notStatus = notStatus;\r\n  } else {\r\n    resData.notStatus = [];\r\n  }\r\n  resData.scheduleUsers = schArr;\r\n  return resData;\r\n}\r\n","// components\r\nimport Page from '../components/Page';\r\n\r\nimport { CalendarContent } from '../components/dashboard-calendar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CalendarPage() {\r\n  return (\r\n    <Page title=\"Thimble | Calendar\">\r\n      <CalendarContent />\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}