{"version":3,"sources":["../../src/components/Page.js","../../src/components/SearchNotFound.js","../../src/components/Label.js","../../src/index.ts","../../src/components/dashboard-insights/InsightListHead.js","../../src/components/dashboard-insights/InsightListToolbar.js","../../src/components/dashboard-insights/InsightList.js","../../src/components/dashboard-insights/InsightContent.js","../../src/views/DashboardInsightsPage.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","SearchNotFound","searchQuery","gutterBottom","align","variant","RootStyle","styled","theme","styleProps","isLight","palette","mode","color","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","sentenceCaseTransform","input","index","result","toLowerCase","sentenceCase","options","delimiter","transform","InsightListHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","map","headCell","alignRight","sortDirection","id","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","label","Box","sx","visuallyHidden","Toolbar","SearchStyle","OutlinedInput","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","InsightListToolbar","filterName","onFilterName","useTheme","bgcolor","Typography","component","value","placeholder","startAdornment","InputAdornment","position","Icon","icon","searchFill","Tooltip","IconButton","trash2Fill","roundFilterList","TABLE_HEAD","descendingComparator","a","b","UserList","dispatch","useDispatch","insights","companies","useSelector","state","superAdmin","page","setPage","useState","setOrder","selected","setSelected","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","companyList","setCompanyList","insightList","setInsightList","useEffect","getInsightsList","getCompanyList","emptyRows","Math","max","length","filteredUsers","arrays","comparator","query","array","stabilizedThis","el","sort","filter","_user","domain","indexOf","applySortFilter","getComparator","isUserNotFound","Card","target","Scrollbar","TableContainer","Table","newSelecteds","n","TableBody","slice","row","name","endOn","isPaid","passedDays","plans","trialDays","isItemSelected","hover","tabIndex","role","aria-checked","selectedIndex","newSelected","concat","handleClick","style","colSpan","py","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","DirectoryContent","Container","maxWidth","breakpoints","down","px","DashboardInsightsPage"],"mappings":"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","file":"static/js/24.c75ae8b9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { forwardRef } from 'react';\r\n// material\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\r\n  <Box ref={ref} {...other}>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n    {children}\r\n  </Box>\r\n));\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSearchNotFound.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};\r\n\r\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\r\n  return (\r\n    <Paper {...other}>\r\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n        Not found\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        No results found for &nbsp;\r\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or\r\n        using complete words.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('span')(({ theme, styleProps }) => {\r\n  const isLight = theme.palette.mode === 'light';\r\n  const { color, variant } = styleProps;\r\n\r\n  const styleFilled = (color) => ({\r\n    color: theme.palette[color].contrastText,\r\n    backgroundColor: theme.palette[color].main\r\n  });\r\n\r\n  const styleOutlined = (color) => ({\r\n    color: theme.palette[color].main,\r\n    backgroundColor: 'transparent',\r\n    border: `1px solid ${theme.palette[color].main}`\r\n  });\r\n\r\n  const styleGhost = (color) => ({\r\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\r\n    backgroundColor: alpha(theme.palette[color].main, 0.16)\r\n  });\r\n\r\n  return {\r\n    height: 22,\r\n    minWidth: 22,\r\n    lineHeight: 0,\r\n    borderRadius: 8,\r\n    cursor: 'default',\r\n    alignItems: 'center',\r\n    whiteSpace: 'nowrap',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    color: theme.palette.grey[800],\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontFamily: theme.typography.fontFamily,\r\n    backgroundColor: theme.palette.grey[300],\r\n    fontWeight: theme.typography.fontWeightBold,\r\n\r\n    ...(color !== 'default'\r\n      ? {\r\n          ...(variant === 'filled' && { ...styleFilled(color) }),\r\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\r\n          ...(variant === 'ghost' && { ...styleGhost(color) })\r\n        }\r\n      : {\r\n          ...(variant === 'outlined' && {\r\n            backgroundColor: 'transparent',\r\n            color: theme.palette.text.primary,\r\n            border: `1px solid ${theme.palette.grey[500_32]}`\r\n          }),\r\n          ...(variant === 'ghost' && {\r\n            color: isLight\r\n              ? theme.palette.text.secondary\r\n              : theme.palette.common.white,\r\n            backgroundColor: theme.palette.grey[500_16]\r\n          })\r\n        })\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Label({\r\n  color = 'default',\r\n  variant = 'ghost',\r\n  children,\r\n  ...other\r\n}) {\r\n  return (\r\n    <RootStyle styleProps={{ color, variant }} {...other}>\r\n      {children}\r\n    </RootStyle>\r\n  );\r\n}\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  color: PropTypes.oneOf([\r\n    'default',\r\n    'primary',\r\n    'secondary',\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'error'\r\n  ]),\r\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost'])\r\n};\r\n","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options,\n  });\n}\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { visuallyHidden } from '@material-ui/utils';\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nInsightListHead.propTypes = {\r\n  order: PropTypes.oneOf(['asc', 'desc']),\r\n  orderBy: PropTypes.string,\r\n  rowCount: PropTypes.number,\r\n  headLabel: PropTypes.array,\r\n  numSelected: PropTypes.number,\r\n  onRequestSort: PropTypes.func,\r\n  onSelectAllClick: PropTypes.func\r\n};\r\n\r\nexport default function InsightListHead({\r\n  order,\r\n  orderBy,\r\n  rowCount,\r\n  headLabel,\r\n  numSelected,\r\n  onRequestSort,\r\n  onSelectAllClick\r\n}) {\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n          />\r\n        </TableCell>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignRight ? 'right' : 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{ ...visuallyHidden }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\r\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\r\n// material\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Box,\r\n  Toolbar,\r\n  Tooltip,\r\n  IconButton,\r\n  Typography,\r\n  OutlinedInput,\r\n  InputAdornment\r\n} from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: 96,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 240,\r\n  transition: theme.transitions.create(['box-shadow', 'width'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nInsightListToolbar.propTypes = {\r\n  numSelected: PropTypes.number,\r\n  filterName: PropTypes.string,\r\n  onFilterName: PropTypes.func\r\n};\r\n\r\nexport default function InsightListToolbar({\r\n  numSelected,\r\n  filterName,\r\n  onFilterName\r\n}) {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(numSelected > 0 && {\r\n          color: isLight ? 'primary.main' : 'text.primary',\r\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography component=\"div\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <SearchStyle\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search companies...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Box\r\n                component={Icon}\r\n                icon={searchFill}\r\n                sx={{ color: 'text.disabled' }}\r\n              />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <Icon icon={trash2Fill} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <Icon icon={roundFilterList} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\nimport { filter } from 'lodash';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\n// material\r\n// import { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  Table,\r\n  // Stack,\r\n  // Avatar,\r\n  Checkbox,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  // Typography,\r\n  TableContainer,\r\n  TablePagination\r\n} from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getCompanyList, getInsightsList } from '../../redux/slices/superAdmin';\r\n\r\n// components\r\nimport Label from '../Label';\r\nimport Scrollbar from '../Scrollbar';\r\nimport SearchNotFound from '../SearchNotFound';\r\n\r\nimport InsightListHead from './InsightListHead';\r\nimport InsightListToolbar from './InsightListToolbar';\r\n// import UserMoreMenu from './CompanyMoreMenu';\r\n// // ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'companyName', label: 'Company Name', alignRight: false },\r\n  { id: 'companyDomain', label: 'Domain', alignRight: false },\r\n  { id: 'plans', label: 'Plans', alignRight: false },\r\n  { id: 'isPaid', label: 'Payment Status', alignRight: false },\r\n  { id: 'trialDays', label: 'Trial Days', alignRight: false },\r\n  { id: 'endOn', label: 'End On', alignRight: false },\r\n  { id: 'passedDays', label: 'Passed Days', alignRight: false }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(arrays, comparator, query) {\r\n  const array = arrays || [];\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(\r\n      array,\r\n      (_user) => _user.domain.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserList() {\r\n  const dispatch = useDispatch();\r\n  const { insights, companies } = useSelector((state) => state.superAdmin);\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState('asc');\r\n  const [selected, setSelected] = useState([]);\r\n  const [orderBy, setOrderBy] = useState('domain');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [companyList, setCompanyList] = useState([]);\r\n  const [insightList, setInsightList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getInsightsList());\r\n    dispatch(getCompanyList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setInsightList([...insights]);\r\n  }, [insights]);\r\n\r\n  useEffect(() => {\r\n    setCompanyList([...companies]);\r\n  }, [companies]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = insightList.map((n) => n.domain);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - insightList.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(\r\n    insightList,\r\n    getComparator(order, orderBy),\r\n    filterName\r\n  );\r\n\r\n  const isUserNotFound = filteredUsers.length === 0;\r\n\r\n  return (\r\n    <Card>\r\n      <InsightListToolbar\r\n        numSelected={selected.length}\r\n        filterName={filterName}\r\n        onFilterName={handleFilterByName}\r\n      />\r\n\r\n      <Scrollbar>\r\n        <TableContainer sx={{ minWidth: 800 }}>\r\n          <Table>\r\n            <InsightListHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              headLabel={TABLE_HEAD}\r\n              rowCount={insightList.length}\r\n              numSelected={selected.length}\r\n              onRequestSort={handleRequestSort}\r\n              onSelectAllClick={handleSelectAllClick}\r\n            />\r\n            <TableBody>\r\n              {filteredUsers\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const {\r\n                    // id,\r\n                    name,\r\n                    domain,\r\n                    endOn,\r\n                    isPaid,\r\n                    passedDays,\r\n                    plans,\r\n                    trialDays\r\n                  } = row;\r\n\r\n                  const isItemSelected = selected.indexOf(domain) !== -1;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      key={index}\r\n                      tabIndex={-1}\r\n                      role=\"checkbox\"\r\n                      selected={isItemSelected}\r\n                      aria-checked={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          onChange={(event) => handleClick(event, domain)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{name}</TableCell>\r\n                      <TableCell align=\"left\">{domain}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Label\r\n                          variant=\"filled\"\r\n                          color={\r\n                            (plans === 'free' && 'error') ||\r\n                            (plans === 'trial' && 'warning') ||\r\n                            'success'\r\n                          }\r\n                        >\r\n                          {sentenceCase(plans)}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Label\r\n                          variant=\"filled\"\r\n                          color={(isPaid !== 1 && 'error') || 'success'}\r\n                        >\r\n                          {/* {sentenceCase(role)} */}\r\n                          {isPaid === 0 ? 'UNPAID' : 'PAID'}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {plans === 'trial' ? trialDays : '0'}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {plans === 'trial' ? endOn : 'Infinity'}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{passedDays}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            {isUserNotFound && (\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                    <SearchNotFound searchQuery={filterName} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            )}\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 15, 25]}\r\n        component=\"div\"\r\n        count={companyList.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport InsightList from './InsightList';\r\n\r\nexport default function DirectoryContent() {\r\n  const theme = useTheme();\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ [theme.breakpoints.down('md')]: { px: 0 } }}>\r\n      <InsightList />\r\n    </Container>\r\n  );\r\n}\r\n","// components\r\nimport Page from '../components/Page';\r\n\r\nimport { InsightContent } from '../components/dashboard-insights';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DashboardInsightsPage() {\r\n  return (\r\n    <Page title=\"Thimble | Insights\">\r\n      <InsightContent />\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}