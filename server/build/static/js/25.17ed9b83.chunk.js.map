{"version":3,"sources":["../../src/components/Page.js","../../src/components/dashboard-component/BaseOptionChart.js","../../src/components/HeaderDashboard.js","../../node_modules/@material-ui/core/Grid/GridContext.js","../../node_modules/@material-ui/core/Grid/gridClasses.js","../../node_modules/@material-ui/core/Grid/Grid.js","../../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../../node_modules/@material-ui/core/CardHeader/CardHeader.js","../../src/components/dashboard-analytics/OccupancyRateCard.js","../../src/components/dashboard-analytics/StatusRateCard.js","../../src/components/dashboard-analytics/WorkforceRateCard.js","../../src/components/dashboard-analytics/AverageWeekCard.js","../../src/components/dashboard-analytics/FreePlanCard.js","../../src/components/dashboard-analytics/AnalyticsContent.js","../../src/views/DashboardAnalyticsPage.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","useStyles","makeStyles","theme","createStyles","border","boxShadow","customShadows","z24","color","palette","text","primary","borderRadius","shape","borderRadiusSm","backgroundColor","background","default","fontWeight","typography","fontWeightBold","grey","mode","borderBottomColor","paper","padding","alignItems","display","marginTop","marginRight","lineHeight","textTransform","BaseOptionChart","useTheme","LABEL_TOTAL","show","label","secondary","subtitle2","LABEL_VALUE","offsetY","h3","colors","main","warning","info","error","success","chart","toolbar","zoom","enabled","foreColor","disabled","fontFamily","states","hover","filter","type","value","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","width","curve","lineCap","grid","strokeDashArray","borderColor","divider","xaxis","axisBorder","axisTicks","markers","size","strokeColors","tooltip","x","legend","fontSize","position","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","pie","donut","total","radialBar","track","strokeWidth","radar","polygons","connectorColors","HeaderDashboard","links","action","heading","moreLink","sx","mb","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","spacing","direction","wrap","String","getOffset","val","parse","parseFloat","replace","GridRoot","experimentalStyled","name","overridesResolver","props","styles","container","item","lg","md","sm","xl","xs","zeroMinWidth","styleProps","deepmerge","_extends","root","boxSizing","flexWrap","margin","minWidth","flexDirection","maxWidth","themeSpacing","marginLeft","paddingTop","paddingLeft","breakpoints","keys","reduce","globalStyles","breakpoint","flexBasis","Math","round","columns","more","fullWidth","values","Object","assign","up","generateGrid","Grid","inProps","themeProps","useThemeProps","extendSxProp","className","columnsProp","component","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","element","_jsx","clsx","as","Provider","getCardHeaderUtilityClass","cardHeaderClasses","CardHeaderRoot","avatar","content","subheader","CardHeaderAvatar","flex","CardHeaderAction","alignSelf","marginBottom","CardHeaderContent","CardHeader","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","_jsxs","OccupancyRateCard","year","month","allStatuses","schedule","daystatus","calendar","setCalendar","useState","categories","setCategories","offices","setOffices","chartData","setChartData","chartOptions","merge","shared","intersect","y","formatter","toFixed","useEffect","monthData","length","calendarInfo","status","allStatus","schedules","monthCalendar","i","newData","stat","dData","rObj","userId","data","push","schArr","sche","userArr","user","isWork","isHalf","id","morning","afternoon","schObj","occupancy","capacity","schTitle","users","parseInt","dayObj","day","officeInfo","getCalendar","office","category","monthDays","getCategories","chartDatas","chartObj","emoji","calen","oInfos","Card","Box","mx","dir","series","options","height","allMembers","statuses","setStatuses","notStatus","isSet","sUser","sIndex","updatedUsers","member","userObj","photoURL","statusRate","rate","noStatuses","members","statusArr","eachStatuses","sObj","totalStatues","state","CHART_DATA","AppAreaInstalled","FreePlanCard","Container","textAlign","alt","src","maxHeight","my","Button","RouterLink","to","PATH_DASHBOARD","admin","plans","init","date","Date","m","getFullYear","getMonth","AnalyticsContent","useAuth","dispatch","useDispatch","officeList","organizations","useSelector","adminSetting","allUsers","general","calendarProps","setCalendarProps","setSchedule","setAllStatuses","setAllMembers","setMonth","setYear","plan","setPlan","getOfficeList","getTeamList","getOrganizations","getAllStatusById","getUsersByCompany","planType","toUpperCase","undefined","result","basicList","customList","rowObj","basic","isActive","custom","AnalyticsPage","home"],"mappings":"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","file":"static/js/25.17ed9b83.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { forwardRef } from 'react';\r\n// material\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\r\n  <Box ref={ref} {...other}>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n    {children}\r\n  </Box>\r\n));\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import { useTheme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    '@global': {\r\n      // Tooltip\r\n      '.apexcharts-tooltip,.apexcharts-xaxistooltip': {\r\n        border: '0 !important',\r\n        boxShadow: `${theme.customShadows.z24} !important`,\r\n        color: `${theme.palette.text.primary} !important`,\r\n        borderRadius: `${theme.shape.borderRadiusSm}px !important`,\r\n        backgroundColor: `${theme.palette.background.default} !important`\r\n      },\r\n      '.apexcharts-tooltip-title': {\r\n        border: '0 !important',\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        backgroundColor: `${theme.palette.grey[500_16]} !important`,\r\n        color:\r\n          theme.palette.text[\r\n            theme.palette.mode === 'light' ? 'secondary' : 'primary'\r\n          ]\r\n      },\r\n      '.apexcharts-xaxistooltip-bottom': {\r\n        '&:before': {\r\n          borderBottomColor: 'transparent !important'\r\n        },\r\n        '&:after': {\r\n          borderBottomColor: `${theme.palette.background.paper} !important`\r\n        }\r\n      },\r\n\r\n      // Legend\r\n      '.apexcharts-legend': {\r\n        padding: '0 !important'\r\n      },\r\n      '.apexcharts-legend-series': {\r\n        alignItems: 'center',\r\n        display: 'flex !important'\r\n      },\r\n      '.apexcharts-legend-marker': {\r\n        marginTop: '2px !important',\r\n        marginRight: '8px !important'\r\n      },\r\n      '.apexcharts-legend-text': {\r\n        lineHeight: '18px',\r\n        textTransform: 'capitalize'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport default function BaseOptionChart() {\r\n  useStyles();\r\n  const theme = useTheme();\r\n\r\n  const LABEL_TOTAL = {\r\n    show: true,\r\n    label: 'Total',\r\n    color: theme.palette.text.secondary,\r\n    ...theme.typography.subtitle2\r\n  };\r\n\r\n  const LABEL_VALUE = {\r\n    offsetY: 8,\r\n    color: theme.palette.text.primary,\r\n    ...theme.typography.h3\r\n  };\r\n\r\n  return {\r\n    // Colors\r\n    colors: [\r\n      theme.palette.primary.main,\r\n      theme.palette.warning.main,\r\n      theme.palette.info.main,\r\n      theme.palette.error.main,\r\n      theme.palette.success.main\r\n    ],\r\n\r\n    // Chart\r\n    chart: {\r\n      toolbar: { show: false },\r\n      zoom: { enabled: false },\r\n      // animations: { enabled: false },\r\n      foreColor: theme.palette.text.disabled,\r\n      fontFamily: theme.typography.fontFamily\r\n    },\r\n\r\n    // States\r\n    states: {\r\n      hover: {\r\n        filter: {\r\n          type: 'lighten',\r\n          value: 0.04\r\n        }\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: 'darken',\r\n          value: 0.88\r\n        }\r\n      }\r\n    },\r\n\r\n    // Fill\r\n    fill: {\r\n      opacity: 1,\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.4,\r\n        opacityTo: 0,\r\n        stops: [0, 100]\r\n      }\r\n    },\r\n\r\n    // Datalabels\r\n    dataLabels: { enabled: false },\r\n\r\n    // Stroke\r\n    stroke: {\r\n      width: 3,\r\n      curve: 'smooth',\r\n      lineCap: 'round'\r\n    },\r\n\r\n    // Grid\r\n    grid: {\r\n      strokeDashArray: 3,\r\n      borderColor: theme.palette.divider\r\n    },\r\n\r\n    // Xaxis\r\n    xaxis: {\r\n      axisBorder: { show: false },\r\n      axisTicks: { show: false }\r\n    },\r\n\r\n    // Markers\r\n    markers: {\r\n      size: 0,\r\n      strokeColors: theme.palette.background.paper\r\n    },\r\n\r\n    // Tooltip\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    },\r\n\r\n    // Legend\r\n    legend: {\r\n      show: true,\r\n      fontSize: 13,\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      markers: { radius: 12 },\r\n      itemMargin: { horizontal: 12 },\r\n      labels: {\r\n        colors: theme.palette.text.primary\r\n      }\r\n    },\r\n\r\n    // plotOptions\r\n    plotOptions: {\r\n      // Pie + Donut\r\n      pie: {\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            value: LABEL_VALUE,\r\n            total: LABEL_TOTAL\r\n          }\r\n        }\r\n      },\r\n      // Radialbar\r\n      radialBar: {\r\n        track: {\r\n          strokeWidth: '100%',\r\n          background: theme.palette.grey[500_16]\r\n        },\r\n        dataLabels: {\r\n          value: LABEL_VALUE,\r\n          total: LABEL_TOTAL\r\n        }\r\n      },\r\n      // Radar\r\n      radar: {\r\n        polygons: {\r\n          strokeWidth: 1,\r\n          fill: { colors: ['transparent'] },\r\n          strokeColors: theme.palette.divider,\r\n          connectorColors: theme.palette.divider\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderDashboard.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderDashboard({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink = '' || [],\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${String(size)}`), ...GRID_SIZES.map(size => `grid-sm-${String(size)}`), ...GRID_SIZES.map(size => `grid-md-${String(size)}`), ...GRID_SIZES.map(size => `grid-lg-${String(size)}`), ...GRID_SIZES.map(size => `grid-xl-${String(size)}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  const size = styleProps[breakpoint];\n  if (!size) return;\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    // Keep 7 significant numbers.\n    const width = `${Math.round(size / styleProps.columns * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.spacing !== 0) {\n      const themeSpacing = theme.spacing(styleProps.spacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    spacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && spacing !== 0) {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing !== '0px') {\n      styles = {\n        width: `calc(100% + ${getOffset(themeSpacing)})`,\n        marginTop: `-${getOffset(themeSpacing)}`,\n        marginLeft: `-${getOffset(themeSpacing)}`,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: getOffset(themeSpacing),\n          paddingLeft: getOffset(themeSpacing)\n        }\n      };\n    }\n  }\n\n  return styles;\n}\n\nconst overridesResolver = (props, styles) => {\n  const {\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = props.styleProps;\n  return deepmerge(_extends({}, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]), styles.root || {});\n}; // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nconst GridRoot = experimentalStyled('div', {}, {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  boxSizing: 'border-box'\n}, styleProps.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, styleProps.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, styleProps.zeroMinWidth && {\n  minWidth: 0\n}, styleProps.direction === 'column' && {\n  flexDirection: 'column',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'column-reverse' && {\n  flexDirection: 'column-reverse',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'row-reverse' && {\n  flexDirection: 'row-reverse'\n}, styleProps.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, styleProps.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateGap, ({\n  theme,\n  styleProps\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp = 12,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"columns\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const columns = React.useContext(GridContext) || columnsProp;\n\n  const styleProps = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${cardHeaderClasses.avatar}`]: styles.avatar,\n    [`& .${cardHeaderClasses.action}`]: styles.action,\n    [`& .${cardHeaderClasses.content}`]: styles.content,\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar'\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action'\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content'\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","/* eslint-disable radix */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable array-callback-return */\r\nimport { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\n// material\r\nimport { Card, CardHeader, Box } from '@material-ui/core';\r\n//\r\nimport BaseOptionChart from '../dashboard-component/BaseOptionChart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction getCategories(monthDays) {\r\n  const categories = [];\r\n  for (let i = 1; i < monthDays + 1; i += 1) {\r\n    categories.push(`${i}`);\r\n  }\r\n  return categories;\r\n}\r\n\r\nfunction getCalendar(status, allStatus, schedules, month, year) {\r\n  const monthCalendar = [];\r\n\r\n  for (let i = 0; i < status.length; i += 1) {\r\n    const newData = [];\r\n    allStatus.map((stat) => {\r\n      const dData = stat.schedule[month][i];\r\n      const rObj = {\r\n        userId: stat.userId,\r\n        data: dData\r\n      };\r\n      newData.push(rObj);\r\n    });\r\n\r\n    const schArr = [];\r\n    schedules.map((sche) => {\r\n      if (sche.type === 'office') {\r\n        const userArr = [];\r\n        newData.map((user) => {\r\n          if (user.data.isWork) {\r\n            if (user.data.isHalf) {\r\n              if (\r\n                sche.id === user.data.morning.id &&\r\n                sche.type === user.data.morning.type\r\n              ) {\r\n                userArr.push(user.userId);\r\n              } else if (\r\n                sche.id === user.data.afternoon.id &&\r\n                sche.type === user.data.afternoon.type\r\n              ) {\r\n                userArr.push(user.userId);\r\n              }\r\n            } else if (!user.data.isHalf) {\r\n              if (\r\n                sche.id === user.data.morning.id &&\r\n                sche.type === user.data.morning.type\r\n              ) {\r\n                userArr.push(user.userId);\r\n              }\r\n            }\r\n          }\r\n        });\r\n        let schObj = {};\r\n        const occupancy = (userArr.length / sche.capacity) * 100;\r\n        schObj = {\r\n          id: sche.id,\r\n          schTitle: sche.title,\r\n          users: userArr,\r\n          capacity: sche.capacity,\r\n          occupancy: parseInt(occupancy)\r\n        };\r\n        schArr.push(schObj);\r\n      }\r\n    });\r\n    const dayObj = {};\r\n\r\n    dayObj.year = year;\r\n    dayObj.month = month;\r\n    dayObj.day = i;\r\n    dayObj.officeInfo = schArr;\r\n    monthCalendar.push(dayObj);\r\n  }\r\n  return monthCalendar;\r\n}\r\n\r\nOccupancyRateCard.propTypes = {\r\n  year: PropTypes.number,\r\n  month: PropTypes.number,\r\n  allStatuses: PropTypes.array,\r\n  schedule: PropTypes.array,\r\n  daystatus: PropTypes.array\r\n};\r\n\r\nexport default function OccupancyRateCard({\r\n  year,\r\n  month,\r\n  allStatuses,\r\n  schedule,\r\n  daystatus\r\n}) {\r\n  const [calendar, setCalendar] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [offices, setOffices] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    xaxis: {\r\n      categories\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: (y) => {\r\n          if (typeof y !== 'undefined') {\r\n            return `${y.toFixed(0)}%`;\r\n          }\r\n          return y;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const monthData = daystatus;\r\n    // was changed regarding allStatuses, schedule\r\n    if (monthData.length > 0 && allStatuses.length > 0 && schedule.length > 0) {\r\n      const calendarInfo = getCalendar(\r\n        monthData[month],\r\n        allStatuses,\r\n        schedule,\r\n        month,\r\n        year\r\n      );\r\n\r\n      setCalendar(calendarInfo);\r\n\r\n      const office = [];\r\n      schedule.map((sche) => {\r\n        if (sche.type === 'office') {\r\n          office.push(sche);\r\n        }\r\n      });\r\n      setOffices(office);\r\n    }\r\n  }, [daystatus, month, year, allStatuses, schedule]);\r\n\r\n  useEffect(() => {\r\n    const category = getCategories(calendar.length);\r\n    setCategories(category);\r\n  }, [calendar]);\r\n\r\n  useEffect(() => {\r\n    const chartDatas = [];\r\n    offices.map((office) => {\r\n      const chartObj = {};\r\n      const occupancy = [];\r\n      chartObj.name = `${office.emoji} ${office.title}`;\r\n      calendar.map((calen) => {\r\n        calen.officeInfo.map((oInfos) => {\r\n          if (office.id === oInfos.id) {\r\n            occupancy.push(oInfos.occupancy);\r\n          }\r\n        });\r\n      });\r\n      chartObj.data = occupancy;\r\n      chartDatas.push(chartObj);\r\n    });\r\n    setChartData(chartDatas);\r\n  }, [calendar, offices]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Office(s) occupancy rate\"\r\n        subheader=\"Percentage of office occupancy per day\"\r\n      />\r\n      <Box sx={{ mt: 3, mx: 3 }} dir=\"ltr\">\r\n        <ReactApexChart\r\n          type=\"area\"\r\n          series={chartData}\r\n          options={chartOptions}\r\n          height={300}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable radix */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable array-callback-return */\r\nimport { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\n// material\r\nimport { Card, CardHeader, Box } from '@material-ui/core';\r\n//\r\nimport BaseOptionChart from '../dashboard-component/BaseOptionChart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction getCategories(monthDays) {\r\n  const categories = [];\r\n  for (let i = 1; i < monthDays + 1; i += 1) {\r\n    categories.push(`${i}`);\r\n  }\r\n  return categories;\r\n}\r\n\r\nfunction getCalendar(status, allStatus, allMembers, schedules, month, year) {\r\n  const monthCalendar = [];\r\n\r\n  for (let i = 0; i < status.length; i += 1) {\r\n    const newData = [];\r\n    allStatus.map((stat) => {\r\n      const dData = stat.schedule[month][i];\r\n      const rObj = {\r\n        userId: stat.userId,\r\n        data: dData\r\n      };\r\n      newData.push(rObj);\r\n    });\r\n\r\n    const schArr = [];\r\n    let notStatus = [];\r\n    schedules.map((sche) => {\r\n      const userArr = [];\r\n      newData.map((user) => {\r\n        if (user.data.isWork) {\r\n          if (user.data.isHalf) {\r\n            if (\r\n              sche.id === user.data.morning.id &&\r\n              sche.type === user.data.morning.type\r\n            ) {\r\n              userArr.push(user.userId);\r\n            } else if (\r\n              sche.id === user.data.afternoon.id &&\r\n              sche.type === user.data.afternoon.type\r\n            ) {\r\n              userArr.push(user.userId);\r\n            }\r\n          } else if (!user.data.isHalf) {\r\n            if (\r\n              sche.id === user.data.morning.id &&\r\n              sche.type === user.data.morning.type\r\n            ) {\r\n              userArr.push(user.userId);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      if (userArr.length > 0) {\r\n        let schObj = {};\r\n        if (sche.type === 'office') {\r\n          const occupancy = (userArr.length / sche.capacity) * 100;\r\n          schObj = {\r\n            emoji: sche.emoji,\r\n            schTitle: sche.title,\r\n            users: userArr,\r\n            type: 'office',\r\n            capacity: sche.capacity,\r\n            occupancy: parseInt(occupancy)\r\n          };\r\n        } else {\r\n          schObj = {\r\n            emoji: sche.emoji,\r\n            schTitle: sche.title,\r\n            users: userArr,\r\n            type: 'status'\r\n          };\r\n        }\r\n        schArr.push(schObj);\r\n      }\r\n    });\r\n\r\n    newData.map((user) => {\r\n      let isSet = false;\r\n      schArr.map((sUser) => {\r\n        for (let i = 0; i < sUser.users.length; i += 1) {\r\n          if (user.userId === sUser.users[i]) {\r\n            isSet = true;\r\n            break;\r\n          }\r\n        }\r\n      });\r\n      if (!isSet) {\r\n        notStatus.push(user.userId);\r\n      }\r\n    });\r\n\r\n    const tmpSchArr = schArr;\r\n    tmpSchArr.map((sche, sIndex) => {\r\n      const updatedUsers = [];\r\n      sche.users.map((userId) => {\r\n        allMembers.map((member) => {\r\n          if (userId === member.id) {\r\n            const userObj = {\r\n              id: userId,\r\n              photoURL: member.photoURL,\r\n              name: member.name\r\n            };\r\n            updatedUsers.push(userObj);\r\n          }\r\n        });\r\n      });\r\n      schArr[sIndex].users = updatedUsers;\r\n    });\r\n\r\n    if (notStatus.length > 0) {\r\n      const tmpNotStatus = notStatus;\r\n      const updatedUsers = [];\r\n      tmpNotStatus.map((userId) => {\r\n        allMembers.map((member) => {\r\n          if (userId === member.id) {\r\n            const userObj = {\r\n              id: userId,\r\n              photoURL: member.photoURL,\r\n              name: member.name\r\n            };\r\n            updatedUsers.push(userObj);\r\n          }\r\n        });\r\n      });\r\n      notStatus = updatedUsers;\r\n    } else {\r\n      notStatus = [];\r\n    }\r\n\r\n    const dayObj = {};\r\n\r\n    dayObj.year = year;\r\n    dayObj.month = month;\r\n    dayObj.day = i;\r\n    dayObj.notStatus = notStatus;\r\n    monthCalendar.push(dayObj);\r\n  }\r\n  return monthCalendar;\r\n}\r\n\r\nOccupancyRateCard.propTypes = {\r\n  year: PropTypes.number,\r\n  month: PropTypes.number,\r\n  allStatuses: PropTypes.array,\r\n  allMembers: PropTypes.array,\r\n  schedule: PropTypes.array,\r\n  daystatus: PropTypes.array\r\n};\r\n\r\nexport default function OccupancyRateCard({\r\n  year,\r\n  month,\r\n  allStatuses,\r\n  allMembers,\r\n  schedule,\r\n  daystatus\r\n}) {\r\n  const [calendar, setCalendar] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    xaxis: {\r\n      categories\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: (y) => {\r\n          if (typeof y !== 'undefined') {\r\n            return `${y.toFixed(0)}%`;\r\n          }\r\n          return y;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setStatuses(['has status', 'no status']);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const monthData = daystatus;\r\n    // was changed regarding allStatuses, schedule\r\n    if (\r\n      monthData.length > 0 &&\r\n      allStatuses.length > 0 &&\r\n      allMembers.length > 0 &&\r\n      schedule.length > 0\r\n    ) {\r\n      const calendarInfo = getCalendar(\r\n        monthData[month],\r\n        allStatuses,\r\n        allMembers,\r\n        schedule,\r\n        month,\r\n        year\r\n      );\r\n\r\n      setCalendar(calendarInfo);\r\n    }\r\n  }, [daystatus, month, year, allStatuses, schedule, allMembers]);\r\n\r\n  useEffect(() => {\r\n    const category = getCategories(calendar.length);\r\n    setCategories(category);\r\n  }, [calendar]);\r\n\r\n  useEffect(() => {\r\n    const chartDatas = [];\r\n    statuses.map((status) => {\r\n      const chartObj = {};\r\n      const statusRate = [];\r\n      chartObj.name = `${status}`;\r\n      calendar.map((calen) => {\r\n        let rate = 0;\r\n        const noStatuses = calen.notStatus.length;\r\n        const members = allMembers.length;\r\n        if (status === 'no status') {\r\n          if (noStatuses > 0) {\r\n            rate = (noStatuses / members) * 100;\r\n          }\r\n        } else if (status === 'has status') {\r\n          if (noStatuses > 0) {\r\n            rate = ((members - noStatuses) / members) * 100;\r\n          } else {\r\n            rate = 100;\r\n          }\r\n        }\r\n        statusRate.push(parseInt(rate));\r\n      });\r\n      chartObj.data = statusRate;\r\n      chartDatas.push(chartObj);\r\n    });\r\n    setChartData(chartDatas);\r\n  }, [calendar, statuses, allMembers]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Status rate\"\r\n        subheader=\"Ratio of set/unset status per day\"\r\n      />\r\n      <Box sx={{ mt: 3, mx: 3 }} dir=\"ltr\">\r\n        <ReactApexChart\r\n          type=\"area\"\r\n          series={chartData}\r\n          options={chartOptions}\r\n          height={300}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable radix */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable array-callback-return */\r\nimport { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\n// material\r\nimport { Card, CardHeader, Box } from '@material-ui/core';\r\n//\r\nimport BaseOptionChart from '../dashboard-component/BaseOptionChart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction getCategories(monthDays) {\r\n  const categories = [];\r\n  for (let i = 1; i < monthDays + 1; i += 1) {\r\n    categories.push(`${i}`);\r\n  }\r\n  return categories;\r\n}\r\n\r\nfunction getCalendar(status, allStatus, allMembers, schedules, month, year) {\r\n  const monthCalendar = [];\r\n\r\n  for (let i = 0; i < status.length; i += 1) {\r\n    const newData = [];\r\n    allStatus.map((stat) => {\r\n      const dData = stat.schedule[month][i];\r\n      const rObj = {\r\n        userId: stat.userId,\r\n        data: dData\r\n      };\r\n      newData.push(rObj);\r\n    });\r\n\r\n    const schArr = [];\r\n    const statusArr = [];\r\n    schedules.map((sche) => {\r\n      if (sche.type !== 'office') {\r\n        const userArr = [];\r\n        const eachStatuses = [];\r\n        newData.map((user) => {\r\n          if (user.data.isWork) {\r\n            if (user.data.isHalf) {\r\n              if (\r\n                sche.id === user.data.morning.id &&\r\n                sche.type === user.data.morning.type\r\n              ) {\r\n                userArr.push(user.userId);\r\n                eachStatuses.push({\r\n                  id: sche.id,\r\n                  title: sche.title,\r\n                  emoji: sche.emoji,\r\n                  type: sche.type\r\n                });\r\n              }\r\n              if (\r\n                sche.id === user.data.afternoon.id &&\r\n                sche.type === user.data.afternoon.type\r\n              ) {\r\n                userArr.push(user.userId);\r\n                eachStatuses.push({\r\n                  id: sche.id,\r\n                  title: sche.title,\r\n                  emoji: sche.emoji,\r\n                  type: sche.type\r\n                });\r\n              }\r\n            } else if (!user.data.isHalf) {\r\n              if (\r\n                sche.id === user.data.morning.id &&\r\n                sche.type === user.data.morning.type\r\n              ) {\r\n                userArr.push(user.userId);\r\n                eachStatuses.push({\r\n                  id: sche.id,\r\n                  title: sche.title,\r\n                  emoji: sche.emoji,\r\n                  type: sche.type\r\n                });\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        if (userArr.length > 0) {\r\n          let schObj = {};\r\n          if (sche.type === 'office') {\r\n            const occupancy = (userArr.length / sche.capacity) * 100;\r\n            schObj = {\r\n              emoji: sche.emoji,\r\n              schTitle: sche.title,\r\n              users: userArr,\r\n              type: 'office',\r\n              capacity: sche.capacity,\r\n              occupancy: parseInt(occupancy)\r\n            };\r\n          } else {\r\n            schObj = {\r\n              emoji: sche.emoji,\r\n              schTitle: sche.title,\r\n              users: userArr,\r\n              type: 'status'\r\n            };\r\n          }\r\n          schArr.push(schObj);\r\n        }\r\n\r\n        const sObj = {\r\n          id: sche.id,\r\n          type: sche.type,\r\n          statuses: eachStatuses.length\r\n        };\r\n\r\n        statusArr.push(sObj);\r\n      }\r\n    });\r\n\r\n    const dayObj = {};\r\n\r\n    dayObj.year = year;\r\n    dayObj.month = month;\r\n    dayObj.day = i;\r\n    dayObj.statusArr = statusArr;\r\n    monthCalendar.push(dayObj);\r\n  }\r\n  return monthCalendar;\r\n}\r\n\r\nOccupancyRateCard.propTypes = {\r\n  year: PropTypes.number,\r\n  month: PropTypes.number,\r\n  allStatuses: PropTypes.array,\r\n  allMembers: PropTypes.array,\r\n  schedule: PropTypes.array,\r\n  daystatus: PropTypes.array\r\n};\r\n\r\nexport default function OccupancyRateCard({\r\n  year,\r\n  month,\r\n  allStatuses,\r\n  allMembers,\r\n  schedule,\r\n  daystatus\r\n}) {\r\n  const [calendar, setCalendar] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    xaxis: {\r\n      categories\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: (y) => {\r\n          if (typeof y !== 'undefined') {\r\n            return `${y.toFixed(0)}%`;\r\n          }\r\n          return y;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const monthData = daystatus;\r\n    // was changed regarding allStatuses, schedule\r\n    if (\r\n      monthData.length > 0 &&\r\n      allStatuses.length > 0 &&\r\n      allMembers.length > 0 &&\r\n      schedule.length > 0\r\n    ) {\r\n      const calendarInfo = getCalendar(\r\n        monthData[month],\r\n        allStatuses,\r\n        allMembers,\r\n        schedule,\r\n        month,\r\n        year\r\n      );\r\n\r\n      setCalendar(calendarInfo);\r\n\r\n      const status = [];\r\n      schedule.map((sche) => {\r\n        if (sche.type !== 'office') {\r\n          status.push(sche);\r\n        }\r\n      });\r\n\r\n      setStatuses(status);\r\n    }\r\n  }, [daystatus, month, year, allStatuses, schedule, allMembers]);\r\n\r\n  useEffect(() => {\r\n    const category = getCategories(calendar.length);\r\n    setCategories(category);\r\n  }, [calendar]);\r\n\r\n  useEffect(() => {\r\n    const chartDatas = [];\r\n    statuses.map((status) => {\r\n      const chartObj = {};\r\n      const statusRate = [];\r\n      chartObj.name = `${status.emoji} ${status.title}`;\r\n      calendar.map((calen) => {\r\n        let rate = 0;\r\n        let totalStatues = 0;\r\n        calen.statusArr.map((state) => {\r\n          totalStatues += state.statuses;\r\n        });\r\n        if (totalStatues === 0) {\r\n          totalStatues = 1;\r\n        }\r\n        calen.statusArr.map((state) => {\r\n          if (state.id === status.id && state.type === status.type) {\r\n            rate = (state.statuses / totalStatues) * 100;\r\n          }\r\n        });\r\n        statusRate.push(parseInt(rate));\r\n      });\r\n      chartObj.data = statusRate;\r\n      chartDatas.push(chartObj);\r\n    });\r\n    setChartData(chartDatas);\r\n  }, [calendar, statuses, allMembers]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Workforce distribution\"\r\n        subheader=\"Percentage of each status per day\"\r\n      />\r\n      <Box sx={{ mt: 3, mx: 3 }} dir=\"ltr\">\r\n        <ReactApexChart\r\n          type=\"area\"\r\n          series={chartData}\r\n          options={chartOptions}\r\n          height={300}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box } from '@material-ui/core';\r\n//\r\nimport BaseOptionChart from '../dashboard-component/BaseOptionChart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [\r\n  {\r\n    name: '👨‍👦‍👦 swiss-office',\r\n    data: [49, 62, 69, 91, 64, 45, 45]\r\n  },\r\n  {\r\n    name: '🦧 Brief',\r\n    data: [46, 34, 93, 56, 77, 88, 99]\r\n  },\r\n  {\r\n    name: '💼 Office',\r\n    data: [76, 94, 96, 76, 47, 68, 87]\r\n  }\r\n];\r\n\r\nexport default function AppAreaInstalled() {\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    xaxis: {\r\n      categories: [\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday',\r\n        'Sunday'\r\n      ]\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Average distribution per day of the week\" />\r\n      <Box sx={{ mt: 3, mx: 3 }} dir=\"ltr\">\r\n        <ReactApexChart\r\n          type=\"area\"\r\n          series={CHART_DATA}\r\n          options={chartOptions}\r\n          height={300}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { Box, Button, Typography, Container } from '@material-ui/core';\r\n\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FreePlanCard() {\r\n  return (\r\n    <Container sx={{ textAlign: 'center' }}>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        Your company is in Free plan!\r\n      </Typography>\r\n      <Typography sx={{ color: 'text.secondary' }}>\r\n        If the plan is upgraded, you can manage it more effectively.\r\n      </Typography>\r\n\r\n      <Box\r\n        component=\"img\"\r\n        alt=\"comingsoon\"\r\n        src=\"/static/illustrations/illustration_coming_soon.svg\"\r\n        sx={{ width: '100%', maxHeight: 240, my: { xs: 5, sm: 10 } }}\r\n      />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        component={RouterLink}\r\n        to={PATH_DASHBOARD.admin.plans}\r\n      >\r\n        Upgrade now\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n// ----------------------------------------------------------------------\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport {\r\n  getCalendar,\r\n  getAllStatusById,\r\n  getUsersByCompany\r\n} from '../../redux/slices/general';\r\nimport {\r\n  getOfficeList,\r\n  getTeamList,\r\n  getOrganizations\r\n} from '../../redux/slices/adminSetting';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nimport OccupancyRateCard from './OccupancyRateCard';\r\nimport StatusRate from './StatusRateCard';\r\nimport WorkforceRateCard from './WorkforceRateCard';\r\nimport AverageWeekCard from './AverageWeekCard';\r\nimport FreePlanCard from './FreePlanCard';\r\n\r\nfunction getFirstDay(y, m) {\r\n  return new Date(y, m, 1);\r\n}\r\n\r\nfunction init() {\r\n  const date = new Date();\r\n  const firstDate = getFirstDay(date.getFullYear(), date.getMonth());\r\n  return firstDate;\r\n}\r\n\r\nexport default function AnalyticsContent() {\r\n  const { user } = useAuth();\r\n  const dispatch = useDispatch();\r\n  const { officeList, organizations } = useSelector(\r\n    (state) => state.adminSetting\r\n  );\r\n  const { calendar, allStatus, allUsers } = useSelector(\r\n    (state) => state.general\r\n  );\r\n\r\n  const [calendarProps, setCalendarProps] = useState([]);\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [allStatuses, setAllStatuses] = useState([]);\r\n  const [allMembers, setAllMembers] = useState([]);\r\n\r\n  const [month, setMonth] = useState(0);\r\n  const [year, setYear] = useState(0);\r\n\r\n  const [plan, setPlan] = useState('');\r\n\r\n  useEffect(() => {\r\n    setMonth(init().getMonth());\r\n    setYear(init().getFullYear());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCalendar());\r\n    dispatch(getOfficeList());\r\n    dispatch(getTeamList());\r\n    dispatch(getOrganizations());\r\n    dispatch(getAllStatusById());\r\n    dispatch(getUsersByCompany());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setPlan(user.planType.toUpperCase());\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (allStatus.length > 0) {\r\n      setAllStatuses(allStatus);\r\n    }\r\n  }, [allStatus]);\r\n\r\n  useEffect(() => {\r\n    if (allUsers.length > 0) {\r\n      setAllMembers(allUsers);\r\n    }\r\n  }, [allUsers]);\r\n\r\n  useEffect(() => {\r\n    if (calendar.length > 0) {\r\n      setCalendarProps(calendar);\r\n    }\r\n  }, [calendar]);\r\n\r\n  useEffect(() => {\r\n    if (organizations.result !== undefined) {\r\n      const { statuses } = organizations.result;\r\n\r\n      const schedules = [];\r\n      const { basicList, customList } = statuses;\r\n      officeList.map((office) => {\r\n        const rowObj = {\r\n          id: office.id,\r\n          type: 'office',\r\n          emoji: office.emoji,\r\n          title: office.name,\r\n          capacity: office.capacity\r\n        };\r\n        schedules.push(rowObj);\r\n      });\r\n\r\n      basicList.map((basic) => {\r\n        if (basic.isActive > 0) {\r\n          const rowObj = {\r\n            id: basic.id,\r\n            type: 'basic',\r\n            emoji: basic.emoji,\r\n            title: basic.title\r\n          };\r\n          schedules.push(rowObj);\r\n        }\r\n      });\r\n\r\n      customList.map((custom) => {\r\n        if (custom.isActive > 0) {\r\n          const rowObj = {\r\n            id: custom.id,\r\n            type: 'custom',\r\n            emoji: custom.emoji,\r\n            title: custom.title\r\n          };\r\n          schedules.push(rowObj);\r\n        }\r\n      });\r\n      setSchedule(schedules);\r\n    }\r\n  }, [organizations, officeList]);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {plan === 'FREE' ? (\r\n        <Grid item xs={12}>\r\n          <FreePlanCard />\r\n        </Grid>\r\n      ) : (\r\n        <>\r\n          <Grid item xs={12}>\r\n            <OccupancyRateCard\r\n              year={year}\r\n              month={month}\r\n              allStatuses={allStatuses}\r\n              schedule={schedule}\r\n              daystatus={calendarProps}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <StatusRate\r\n              year={year}\r\n              month={month}\r\n              allStatuses={allStatuses}\r\n              allMembers={allMembers}\r\n              schedule={schedule}\r\n              daystatus={calendarProps}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <WorkforceRateCard\r\n              year={year}\r\n              month={month}\r\n              allStatuses={allStatuses}\r\n              allMembers={allMembers}\r\n              schedule={schedule}\r\n              daystatus={calendarProps}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AverageWeekCard />\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","// components\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport Page from '../components/Page';\r\n\r\nimport { AnalyticsContent } from '../components/dashboard-analytics';\r\nimport HeaderDashboard from '../components/HeaderDashboard';\r\nimport { PATH_DASHBOARD } from '../routes/paths';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsPage() {\r\n  return (\r\n    <Page title=\"Thimble | Analytics\">\r\n      <Container maxWidth=\"lg\">\r\n        <HeaderDashboard\r\n          heading=\"Analytics\"\r\n          links={[\r\n            { name: 'Admin', href: PATH_DASHBOARD.general.home },\r\n            { name: 'Analytics' }\r\n          ]}\r\n        />\r\n        <AnalyticsContent />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}