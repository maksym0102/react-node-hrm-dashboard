{"version":3,"sources":["../../src/components/Page.js","../../src/components/SearchNotFound.js","../../node_modules/@material-ui/core/FormControlLabel/formControlLabelClasses.js","../../node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js","../../node_modules/@material-ui/core/FormControl/formControlClasses.js","../../node_modules/@material-ui/core/FormControl/FormControl.js","../../node_modules/@material-ui/core/FormLabel/formLabelClasses.js","../../node_modules/@material-ui/core/FormLabel/FormLabel.js","../../node_modules/@material-ui/core/InputLabel/inputLabelClasses.js","../../node_modules/@material-ui/core/InputLabel/InputLabel.js","../../src/components/dashboard-companies/CompanyListHead.js","../../src/components/dashboard-companies/CompanyListToolbar.js","../../src/components/dashboard-companies/CompanyList.js","../../src/hooks/useSuperAdmin.js","../../src/components/dashboard-companies/CompanyContent.js","../../src/views/DashboardCompaniesPage.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","SearchNotFound","searchQuery","gutterBottom","align","variant","getFormControlLabelUtilityClasses","slot","generateUtilityClass","formControlLabelClasses","generateUtilityClasses","FormControlLabelRoot","experimentalStyled","name","overridesResolver","props","styles","styleProps","deepmerge","_extends","capitalize","labelPlacement","label","root","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","color","palette","text","disabled","FormControlLabel","React","inProps","useThemeProps","className","control","disabledProp","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","classes","slots","composeClasses","useUtilityClasses","_jsxs","clsx","_jsx","Typography","component","getFormControlUtilityClasses","formControlClasses","FormControlRoot","margin","fullWidth","position","minWidth","padding","border","marginTop","marginBottom","width","FormControl","error","focused","visuallyFocused","hiddenLabel","required","size","adornedStart","setAdornedStart","initialAdornedStart","child","isMuiElement","input","isAdornedStart","filled","setFilled","initialFilled","isFilled","focusedState","setFocused","undefined","onFilled","childContext","onBlur","onEmpty","onFocus","registerEffect","FormControlContext","Provider","value","as","getFormLabelUtilityClasses","formLabelClasses","FormLabelRoot","colorSecondary","asterisk","secondary","typography","body1","lineHeight","main","AsteriskComponent","FormLabel","fcs","formControlState","states","getInputLabelUtilityClasses","InputLabelRoot","shouldForwardProp","prop","formControl","sizeSmall","shrink","disableAnimation","animated","transformOrigin","whiteSpace","overflow","textOverflow","maxWidth","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","InputLabel","shrinkProp","composedClasses","UserListHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","map","headCell","alignRight","sortDirection","id","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","Box","sx","visuallyHidden","RootStyle","styled","Toolbar","height","justifyContent","spacing","SearchStyle","OutlinedInput","easeInOut","boxShadow","customShadows","z8","borderWidth","borderColor","grey","UserListToolbar","filterName","onFilterName","isLight","useTheme","mode","bgcolor","placeholder","startAdornment","InputAdornment","Icon","icon","searchFill","Tooltip","IconButton","trash2Fill","roundFilterList","TABLE_HEAD","descendingComparator","a","b","UserList","dispatch","useDispatch","companies","useSelector","state","superAdmin","updatePlan","updateIsManual","data","manualData","useSuperAdmin","page","setPage","useState","setOrder","selected","setSelected","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","companyList","setCompanyList","useEffect","getUserList","getCompanyList","emptyRows","Math","max","length","filteredUsers","arrays","comparator","query","array","stabilizedThis","el","index","sort","filter","_user","domain","toLowerCase","indexOf","applySortFilter","getComparator","isUserNotFound","Card","target","Scrollbar","TableContainer","Table","newSelecteds","n","TableBody","slice","row","members","offices","teams","adminEmail","planType","isSetBySuper","isItemSelected","hover","tabIndex","role","aria-checked","selectedIndex","newSelected","concat","handleClick","Select","labelId","e","tmpCompanies","tmpCompany","company","insData","item","push","MenuItem","Switch","style","colSpan","py","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","DirectoryContent","Container","breakpoints","down","px","DashboardCompaniesPage"],"mappings":"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","file":"static/js/27.bb37bfeb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { forwardRef } from 'react';\r\n// material\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\r\n  <Box ref={ref} {...other}>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n    {children}\r\n  </Box>\r\n));\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSearchNotFound.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};\r\n\r\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\r\n  return (\r\n    <Paper {...other}>\r\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n        Not found\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        No results found for &nbsp;\r\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or\r\n        using complete words.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import { generateUtilityClasses, generateUtilityClass } from '@material-ui/unstyled';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`labelPlacement${capitalize(styleProps.labelPlacement)}`], {\n    [`& .${formControlLabelClasses.label}`]: styles.label\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = styleProps;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = experimentalStyled('label', {}, {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  '&.Mui-disabled': {\n    cursor: 'default'\n  }\n}, styleProps.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, styleProps.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, styleProps.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    '&.Mui-disabled': {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    control,\n    disabled: disabledProp,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checked\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const styleProps = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/_jsx(Typography, {\n      component: \"span\",\n      className: classes.label,\n      children: label\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { generateUtilityClasses, generateUtilityClass } from '@material-ui/unstyled';\nexport function getFormControlUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControl', slot);\n}\nconst formControlClasses = generateUtilityClasses('MuiFormControl', ['root', 'marginNone', 'marginNormal', 'marginDense', 'fullWidth']);\nexport default formControlClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = ({\n  styleProps\n}, styles) => {\n  return deepmerge(_extends({}, styles[`margin${capitalize(styleProps.margin)}`], styleProps.fullWidth && styles.fullWidth), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\n\nconst FormControlRoot = experimentalStyled('div', {}, {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top'\n}, styleProps.margin === 'normal' && {\n  marginTop: 16,\n  marginBottom: 8\n}, styleProps.margin === 'dense' && {\n  marginTop: 8,\n  marginBottom: 4\n}, styleProps.fullWidth && {\n  width: '100%'\n}));\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\n\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size = 'medium',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  const onFilled = React.useCallback(() => {\n    setFilled(true);\n  }, []);\n  const onEmpty = React.useCallback(() => {\n    setFilled(false);\n  }, []);\n  const childContext = {\n    adornedStart,\n    setAdornedStart,\n    color,\n    disabled,\n    error,\n    filled,\n    focused,\n    fullWidth,\n    hiddenLabel,\n    size,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onEmpty,\n    onFilled,\n    onFocus: () => {\n      setFocused(true);\n    },\n    registerEffect,\n    required,\n    variant\n  };\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      styleProps: styleProps,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getFormLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormLabel', slot);\n}\nconst formLabelClasses = generateUtilityClasses('MuiFormLabel', ['root', 'colorSecondary', 'focused', 'disabled', 'error', 'filled', 'required', 'asterisk']);\nexport default formLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = ({\n  styleProps\n}, styles) => {\n  return deepmerge(_extends({}, styleProps.color === 'secondary' && styles.colorSecondary, styleProps.filled && styles.filled, {\n    [`& .${formLabelClasses.asterisk}`]: _extends({}, styles.asterisk)\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\n\nexport const FormLabelRoot = experimentalStyled('label', {}, {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.body1, {\n  lineHeight: '1.4375em',\n  padding: 0,\n  '&.Mui-focused': {\n    color: theme.palette[styleProps.color].main\n  },\n  '&.Mui-disabled': {\n    color: theme.palette.text.disabled\n  },\n  '&.Mui-error': {\n    color: theme.palette.error.main\n  }\n}));\nconst AsteriskComponent = experimentalStyled('span', {}, {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk'\n})(({\n  theme\n}) => ({\n  '&.Mui-error': {\n    color: theme.palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n\n  const {\n    children,\n    className,\n    component = 'label'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n\n  const styleProps = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      styleProps: styleProps,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormLabel;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getInputLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiInputLabel', slot);\n}\nconst inputLabelClasses = generateUtilityClasses('MuiInputLabel', ['root', 'focused', 'disabled', 'error', 'required', 'asterisk', 'formControl', 'sizeSmall', 'shrink', 'animated', 'filled', 'outlined']);\nexport default inputLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport FormLabel, { formLabelClasses } from '../FormLabel';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport { getInputLabelUtilityClasses } from './inputLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, !styleProps.formControl && styles.formControl, styleProps.size === 'small' && styles.sizeSmall, styleProps.shrink && styles.shrink, !styleProps.disableAnimation && styles.animated, styles[styleProps.variant], {\n    [`& .${formLabelClasses.asterisk}`]: styles.asterisk\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    formControl,\n    size,\n    shrink,\n    disableAnimation,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size === 'small' && 'sizeSmall', variant]\n  };\n  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst InputLabelRoot = experimentalStyled(FormLabel, {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiInputLabel',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'block',\n  transformOrigin: 'top left',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  maxWidth: '100%'\n}, styleProps.formControl && {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  // slight alteration to spec spacing to match visual spec result\n  transform: 'translate(0, 20px) scale(1)'\n}, styleProps.size === 'small' && {\n  // Compensation for the `Input.inputSizeSmall` style.\n  transform: 'translate(0, 17px) scale(1)'\n}, styleProps.shrink && {\n  transform: 'translate(0, -1.5px) scale(0.75)',\n  transformOrigin: 'top left',\n  maxWidth: '133%'\n}, !styleProps.disableAnimation && {\n  transition: theme.transitions.create(['color', 'transform', 'max-width'], {\n    duration: theme.transitions.duration.shorter,\n    easing: theme.transitions.easing.easeOut\n  })\n}, styleProps.variant === 'filled' && _extends({\n  // Chrome's autofill feature gives the input field a yellow background.\n  // Since the input field is behind the label in the HTML tree,\n  // the input field is drawn last and hides the label with an opaque background color.\n  // zIndex: 1 will raise the label above opaque background-colors of input.\n  zIndex: 1,\n  pointerEvents: 'none',\n  transform: 'translate(12px, 16px) scale(1)',\n  maxWidth: 'calc(100% - 24px)'\n}, styleProps.size === 'small' && {\n  transform: 'translate(12px, 13px) scale(1)'\n}, styleProps.shrink && _extends({\n  transform: 'translate(12px, 7px) scale(0.75)',\n  maxWidth: 'calc(133% - 24px)'\n}, styleProps.size === 'small' && {\n  transform: 'translate(12px, 4px) scale(0.75)'\n})), styleProps.variant === 'outlined' && _extends({\n  // see comment above on filled.zIndex\n  zIndex: 1,\n  pointerEvents: 'none',\n  transform: 'translate(14px, 16px) scale(1)',\n  maxWidth: 'calc(100% - 24px)'\n}, styleProps.size === 'small' && {\n  transform: 'translate(14px, 9px) scale(1)'\n}, styleProps.shrink && {\n  maxWidth: 'calc(133% - 24px)',\n  transform: 'translate(14px, -9px) scale(0.75)'\n})));\nconst InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiInputLabel',\n    props: inProps\n  });\n\n  const {\n    disableAnimation = false,\n    shrink: shrinkProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['size', 'variant']\n  });\n\n  const styleProps = _extends({}, props, {\n    disableAnimation,\n    formControl: muiFormControl,\n    shrink,\n    size: fcs.size,\n    variant: fcs.variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(InputLabelRoot, _extends({\n    \"data-shrink\": shrink,\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   * @default false\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputLabel;","import PropTypes from 'prop-types';\r\n// material\r\nimport { visuallyHidden } from '@material-ui/utils';\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserListHead.propTypes = {\r\n  order: PropTypes.oneOf(['asc', 'desc']),\r\n  orderBy: PropTypes.string,\r\n  rowCount: PropTypes.number,\r\n  headLabel: PropTypes.array,\r\n  numSelected: PropTypes.number,\r\n  onRequestSort: PropTypes.func,\r\n  onSelectAllClick: PropTypes.func\r\n};\r\n\r\nexport default function UserListHead({\r\n  order,\r\n  orderBy,\r\n  rowCount,\r\n  headLabel,\r\n  numSelected,\r\n  onRequestSort,\r\n  onSelectAllClick\r\n}) {\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n          />\r\n        </TableCell>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignRight ? 'right' : 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{ ...visuallyHidden }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\r\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\r\n// material\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Box,\r\n  Toolbar,\r\n  Tooltip,\r\n  IconButton,\r\n  Typography,\r\n  OutlinedInput,\r\n  InputAdornment\r\n} from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: 96,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 240,\r\n  transition: theme.transitions.create(['box-shadow', 'width'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserListToolbar.propTypes = {\r\n  numSelected: PropTypes.number,\r\n  filterName: PropTypes.string,\r\n  onFilterName: PropTypes.func\r\n};\r\n\r\nexport default function UserListToolbar({\r\n  numSelected,\r\n  filterName,\r\n  onFilterName\r\n}) {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(numSelected > 0 && {\r\n          color: isLight ? 'primary.main' : 'text.primary',\r\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography component=\"div\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <SearchStyle\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search companies...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Box\r\n                component={Icon}\r\n                icon={searchFill}\r\n                sx={{ color: 'text.disabled' }}\r\n              />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <Icon icon={trash2Fill} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <Icon icon={roundFilterList} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\nimport { filter } from 'lodash';\r\n// import { sentenceCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\n// material\r\n// import { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  Table,\r\n  // Stack,\r\n  // Avatar,\r\n  Checkbox,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  // Typography,\r\n  TableContainer,\r\n  TablePagination,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getUserList } from '../../redux/slices/user';\r\nimport { getCompanyList } from '../../redux/slices/superAdmin';\r\nimport useSuperAdmin from '../../hooks/useSuperAdmin';\r\n// components\r\n// import Label from '../Label';\r\nimport Scrollbar from '../Scrollbar';\r\nimport SearchNotFound from '../SearchNotFound';\r\n\r\nimport UserListHead from './CompanyListHead';\r\nimport UserListToolbar from './CompanyListToolbar';\r\n// import UserMoreMenu from './CompanyMoreMenu';\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'companyName', label: 'Company Name', alignRight: false },\r\n  { id: 'companyDomain', label: 'Domain', alignRight: false },\r\n  { id: 'members', label: 'Members', alignRight: false },\r\n  { id: 'offices', label: 'Offices', alignRight: false },\r\n  { id: 'teams', label: 'Teams', alignRight: false },\r\n  // { id: 'adminName', label: 'Admin Name', alignRight: false },\r\n  { id: 'adminEmail', label: 'Admin Email', alignRight: false },\r\n  { id: 'planType', label: 'Plan Type', alignRight: false },\r\n  { id: 'auto', label: 'Auto/Manual', alignRight: false }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(arrays, comparator, query) {\r\n  const array = arrays || [];\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(\r\n      array,\r\n      (_user) => _user.domain.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserList() {\r\n  // const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  // const { userList } = useSelector((state) => state.user);\r\n  const { companies } = useSelector((state) => state.superAdmin);\r\n  const { updatePlan, updateIsManual } = useSuperAdmin();\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState('asc');\r\n  const [selected, setSelected] = useState([]);\r\n  const [orderBy, setOrderBy] = useState('domain');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [companyList, setCompanyList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n    dispatch(getCompanyList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setCompanyList([...companies]);\r\n  }, [companies]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = companyList.map((n) => n.domain);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - companyList.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(\r\n    companyList,\r\n    getComparator(order, orderBy),\r\n    filterName\r\n  );\r\n\r\n  const isUserNotFound = filteredUsers.length === 0;\r\n\r\n  return (\r\n    <Card>\r\n      <UserListToolbar\r\n        numSelected={selected.length}\r\n        filterName={filterName}\r\n        onFilterName={handleFilterByName}\r\n      />\r\n\r\n      <Scrollbar>\r\n        <TableContainer sx={{ minWidth: 800 }}>\r\n          <Table>\r\n            <UserListHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              headLabel={TABLE_HEAD}\r\n              rowCount={companyList.length}\r\n              numSelected={selected.length}\r\n              onRequestSort={handleRequestSort}\r\n              onSelectAllClick={handleSelectAllClick}\r\n            />\r\n            <TableBody>\r\n              {filteredUsers\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const {\r\n                    id,\r\n                    name,\r\n                    domain,\r\n                    members,\r\n                    offices,\r\n                    teams,\r\n                    // adminAvatar,\r\n                    // adminName,\r\n                    adminEmail,\r\n                    planType,\r\n                    isSetBySuper\r\n                  } = row;\r\n\r\n                  const isItemSelected = selected.indexOf(domain) !== -1;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      key={index}\r\n                      tabIndex={-1}\r\n                      role=\"checkbox\"\r\n                      selected={isItemSelected}\r\n                      aria-checked={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          onChange={(event) => handleClick(event, domain)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{name}</TableCell>\r\n                      <TableCell align=\"left\">{domain}</TableCell>\r\n                      <TableCell align=\"left\">{members}</TableCell>\r\n                      <TableCell align=\"left\">{offices}</TableCell>\r\n                      <TableCell align=\"left\">{teams}</TableCell>\r\n\r\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                          <Avatar alt={adminName} src={adminAvatar} />\r\n                          <Typography variant=\"subtitle2\" noWrap>\r\n                            {adminName}\r\n                          </Typography>\r\n                        </Stack>\r\n                      </TableCell> */}\r\n                      <TableCell align=\"left\">{adminEmail}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <FormControl variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Plan Type\r\n                          </InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={planType}\r\n                            onChange={(e) => {\r\n                              const tmpCompanies = [];\r\n                              let tmpCompany = {};\r\n                              companyList.map((company) => {\r\n                                if (company.id === id) {\r\n                                  tmpCompany = company;\r\n                                }\r\n                              });\r\n\r\n                              const insData = {\r\n                                ...tmpCompany,\r\n                                planType: e.target.value,\r\n                                isSetBySuper: 0\r\n                              };\r\n\r\n                              companyList.map((item) => {\r\n                                if (item.id === id) {\r\n                                  tmpCompanies.push(insData);\r\n                                } else {\r\n                                  tmpCompanies.push(item);\r\n                                }\r\n                              });\r\n                              setCompanyList([...tmpCompanies]);\r\n                              const data = { id, planType: e.target.value };\r\n                              updatePlan({ data });\r\n                              const manualData = {\r\n                                id,\r\n                                isSetBySuper: 0\r\n                              };\r\n                              updateIsManual({ manualData });\r\n                            }}\r\n                            label=\"Plan Type\"\r\n                          >\r\n                            <MenuItem value=\"trial\">Trial</MenuItem>\r\n                            <MenuItem value=\"free\">Free</MenuItem>\r\n                            <MenuItem value=\"premium\">Premium</MenuItem>\r\n                            <MenuItem value=\"enterprise\">Enterprise</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Switch\r\n                              checked={!isSetBySuper}\r\n                              onChange={() => {\r\n                                const tmpCompanies = [];\r\n                                let tmpCompany = {};\r\n                                companyList.map((company) => {\r\n                                  if (company.id === id) {\r\n                                    tmpCompany = company;\r\n                                  }\r\n                                });\r\n\r\n                                const insData = {\r\n                                  ...tmpCompany,\r\n                                  isSetBySuper: !isSetBySuper\r\n                                };\r\n\r\n                                companyList.map((item) => {\r\n                                  if (item.id === id) {\r\n                                    tmpCompanies.push(insData);\r\n                                  } else {\r\n                                    tmpCompanies.push(item);\r\n                                  }\r\n                                });\r\n                                setCompanyList([...tmpCompanies]);\r\n                                const manualData = {\r\n                                  id,\r\n                                  isSetBySuper: !isSetBySuper\r\n                                };\r\n                                updateIsManual({ manualData });\r\n                              }}\r\n                            />\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            {isUserNotFound && (\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                    <SearchNotFound searchQuery={filterName} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            )}\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 15, 25]}\r\n        component=\"div\"\r\n        count={companyList.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\n// redux\r\nimport { updatePlan, updateIsManual } from '../redux/slices/superAdmin';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useSuperAdmin() {\r\n  // JWT Auth\r\n  const dispatch = useDispatch();\r\n\r\n  return {\r\n    // -------------- Update list ---------------------\r\n    updatePlan: ({ data }) => dispatch(updatePlan({ data })),\r\n    updateIsManual: ({ manualData }) => dispatch(updateIsManual({ manualData }))\r\n  };\r\n}\r\n","/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport CompanyList from './CompanyList';\r\n\r\nexport default function DirectoryContent() {\r\n  const theme = useTheme();\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ [theme.breakpoints.down('md')]: { px: 0 } }}>\r\n      <CompanyList />\r\n    </Container>\r\n  );\r\n}\r\n","// components\r\nimport Page from '../components/Page';\r\n\r\nimport { CompanyContent } from '../components/dashboard-companies';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DashboardCompaniesPage() {\r\n  return (\r\n    <Page title=\"Thimble | Company List\">\r\n      <CompanyContent />\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}